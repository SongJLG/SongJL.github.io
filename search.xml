<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>django drf开发CMDB模块</title>
    <url>/2021/12/17/django-drf%E5%BC%80%E5%8F%91CMDB%E6%A8%A1%E5%9D%97/</url>
    <content><![CDATA[<h3 id="django-drf框架重写CMDB模块"><a href="#django-drf框架重写CMDB模块" class="headerlink" title="django drf框架重写CMDB模块"></a><code>django drf</code>框架重写<code>CMDB</code>模块</h3><p>目前使用的<code>CMDB</code>是开源的工具，某些功能缺失。其他开源工具有类似模块，但框架不同，所以用<code>Django REST framework</code> 重写了故障管理和事件管理模块，同时增加了<code>https</code>证书管理和加密功能的模块，同时做了一个用户<code>RBAC</code>管理的功能。</p>
<p>项目地址： <a href="https://github.com/SongJLG/domain-cert" target="_blank" rel="noopener">https://github.com/SongJLG/domain-cert</a></p>
<a id="more"></a>

<h3 id="接口文档"><a href="#接口文档" class="headerlink" title="接口文档"></a>接口文档</h3><ul>
<li><p>采用 <code>drf-yasg</code> 自动生成接口文档：</p>
<p><img src="SnippetsAPI.jpg" alt="API"></p>
</li>
</ul>
<h3 id="证书管理接口："><a href="#证书管理接口：" class="headerlink" title="证书管理接口："></a>证书管理接口：</h3><ul>
<li><p>证书录入之后获取该证书的相应信息，之后采用<code>post_save</code>的信号进行处理：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db.models.signals <span class="keyword">import</span> post_save </span><br><span class="line"><span class="keyword">from</span> django.dispatch <span class="keyword">import</span> receiver</span><br><span class="line"><span class="keyword">from</span> ..models <span class="keyword">import</span> Certs</span><br><span class="line"><span class="keyword">from</span> .tasks <span class="keyword">import</span> refresh_certs_messages_to_db</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@receiver(post_save, sender=Certs)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">certs_pre_create_or_update</span><span class="params">(sender, instance, **kwargs)</span>:</span></span><br><span class="line">    refresh_certs_messages_to_db(instance.id)</span><br><span class="line">    <span class="keyword">return</span> instance</span><br></pre></td></tr></table></figure>
</li>
<li><p>证书信息获取的逻辑：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> logging <span class="keyword">import</span> exception</span><br><span class="line"><span class="keyword">from</span> ..models <span class="keyword">import</span> Certs</span><br><span class="line"><span class="keyword">from</span> .utils <span class="keyword">import</span> load_certificate</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">refresh_certs_messages_to_db</span><span class="params">(cert_obj_id=None)</span>:</span></span><br><span class="line">    certs = Certs.objects.filter(id=cert_obj_id) <span class="keyword">if</span> cert_obj_id <span class="keyword">else</span> Certs.objects.all()</span><br><span class="line">    <span class="keyword">for</span> cert <span class="keyword">in</span> certs:</span><br><span class="line">        Certs._meta.auto_created = <span class="literal">True</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> cert.method: cert.method = <span class="number">0</span></span><br><span class="line">            <span class="keyword">if</span> cert.method == <span class="number">0</span>:</span><br><span class="line">                cert_info = load_certificate(cert.method, cert.domain_url)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                cert_info = load_certificate(cert.method, cert.crt_file)</span><br><span class="line">            <span class="keyword">for</span> k, v <span class="keyword">in</span> cert_info.items():</span><br><span class="line">                setattr(cert, k, v)</span><br><span class="line">            cert.save()</span><br><span class="line">        <span class="keyword">except</span> exception <span class="keyword">as</span> e:</span><br><span class="line">            print(e)</span><br><span class="line">        <span class="keyword">finally</span>:</span><br><span class="line">            Certs._meta.auto_created = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span></span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">from</span> urllib3.contrib <span class="keyword">import</span> pyopenssl <span class="keyword">as</span> reqs</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">load_certificate</span><span class="params">(method, obj)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> method == <span class="number">0</span>:</span><br><span class="line">        cert = reqs.ssl.get_server_certificate((obj, <span class="number">443</span>))</span><br><span class="line">    <span class="keyword">elif</span> method == <span class="number">1</span>:</span><br><span class="line">        cert = obj</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> &#123;&#125;</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        x509 = reqs.OpenSSL.crypto.load_certificate(reqs.OpenSSL.crypto.FILETYPE_PEM, cert)</span><br><span class="line">        notbefore = datetime.strptime(x509.get_notBefore().decode()[<span class="number">0</span>:<span class="number">-1</span>], <span class="string">'%Y%m%d%H%M%S'</span>)</span><br><span class="line">        notafter = datetime.strptime(x509.get_notAfter().decode()[<span class="number">0</span>:<span class="number">-1</span>], <span class="string">'%Y%m%d%H%M%S'</span>)</span><br><span class="line">        remain_days = notafter - datetime.now()</span><br><span class="line">        organization_name = x509.get_subject().organizationName</span><br><span class="line">        serial_number = x509.get_subject().serialNumber</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> serial_number:</span><br><span class="line">            cert_type = <span class="string">"EV"</span></span><br><span class="line">        <span class="keyword">elif</span> <span class="keyword">not</span> organization_name:</span><br><span class="line">            cert_type = <span class="string">"DV"</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            cert_type = <span class="string">"OV"</span></span><br><span class="line"></span><br><span class="line">        ret = &#123;</span><br><span class="line">            <span class="string">'domain'</span>: x509.get_subject().CN,</span><br><span class="line">            <span class="string">'orther_domain'</span>: reqs.get_subj_alt_name(x509),</span><br><span class="line">            <span class="string">'organization_name'</span>: organization_name,</span><br><span class="line">            <span class="string">'serial_number'</span>: serial_number,</span><br><span class="line">            <span class="string">'issued_by'</span>: x509.get_issuer().CN,</span><br><span class="line">            <span class="string">'cert_type'</span>: cert_type,</span><br><span class="line">            <span class="string">'notbefore'</span>: notbefore.strftime(<span class="string">'%Y-%m-%d %H:%M:%S'</span>),</span><br><span class="line">            <span class="string">'notafter'</span>: notafter.strftime(<span class="string">'%Y-%m-%d %H:%M:%S'</span>),</span><br><span class="line">            <span class="string">'remain_days'</span>: remain_days.days,</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">raise</span> Exception(e)</span><br><span class="line">    <span class="keyword">return</span> ret</span><br></pre></td></tr></table></figure>



</li>
</ul>
<ul>
<li><p>证书信息的更新采用<code>APScheduler</code>做定时任务：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> apscheduler.schedulers.background <span class="keyword">import</span> BackgroundScheduler</span><br><span class="line"><span class="keyword">from</span> django_apscheduler.jobstores <span class="keyword">import</span> DjangoJobStore, register_events, register_job</span><br><span class="line"><span class="keyword">from</span> .api <span class="keyword">import</span> tasks</span><br><span class="line">scheduler = BackgroundScheduler(timezone=<span class="string">'Asia/Shanghai'</span>)</span><br><span class="line">scheduler.add_jobstore(DjangoJobStore(), <span class="string">'default'</span>)</span><br><span class="line">scheduler.add_job(func=tasks.refresh_certs_messages_to_db, trigger=<span class="string">"cron"</span>, day=<span class="string">'*'</span>, id=<span class="string">"cret_update_daily"</span>)</span><br><span class="line">register_events(scheduler)</span><br><span class="line">scheduler.start()</span><br></pre></td></tr></table></figure>
</li>
<li><p>实现效果：</p>
<p><img src="CertList.jpg" alt="Cert"></p>
</li>
</ul>
<h3 id="运维工具接口："><a href="#运维工具接口：" class="headerlink" title="运维工具接口："></a>运维工具接口：</h3><ul>
<li><p>运维工具中提供了故障管理和事件管理功能，同事还提供了一个密码生成工具；</p>
</li>
<li><p>在接口的实现中没啥多说的，主要是文件上传功能的实现：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">fault_report = models.FileField(upload_to=<span class="string">'uploads/'</span>, verbose_name=<span class="string">"故障报告"</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">MEDIA_URL = <span class="string">'/media/'</span></span><br><span class="line">MEDIA_ROOT = os.path.join(BASE_DIR,<span class="string">'media'</span>)</span><br></pre></td></tr></table></figure>
</li>
<li><p>加密功能就是生成随机密码，密钥对和对称加密，后续会添加非对称的加密和解签功能；为了方便测试都是采用的<code>url</code>传参的方式，和前端对接时会改成通过<code>html</code>获取的方式；</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PasswordView</span><span class="params">(APIView)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        num = request.GET[<span class="string">'num'</span>]</span><br><span class="line">        <span class="keyword">if</span> str(num).isdigit():</span><br><span class="line">            chars = string.ascii_letters + string.digits + <span class="string">"#$%&amp;*!~^"</span></span><br><span class="line">            random_password = <span class="string">''</span>.join([random.choice(chars) <span class="keyword">for</span> i <span class="keyword">in</span> range(int(num))])</span><br><span class="line">            <span class="keyword">return</span> Response(&#123;<span class="string">'code'</span>: <span class="number">0</span>, <span class="string">'res'</span>: <span class="string">"success"</span>, <span class="string">'msg'</span>: random_password&#125;, status=status.HTTP_200_OK)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> Response(&#123;<span class="string">'code'</span>: <span class="number">1</span>, <span class="string">'res'</span>: <span class="string">"error"</span>, <span class="string">'msg'</span>: <span class="string">"请输入正确参数值"</span>&#125;, 		      status=status.HTTP_200_OK)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CryptView</span><span class="params">(APIView)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request, *args, **kwargs)</span>:</span></span><br><span class="line">        print(request.user)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            key = request.GET[<span class="string">'key'</span>]</span><br><span class="line">            value = request.GET[<span class="string">'value'</span>]</span><br><span class="line">            <span class="keyword">if</span> key == <span class="string">'text'</span>:</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> value:</span><br><span class="line">                    <span class="keyword">return</span> Response(&#123;<span class="string">'code'</span>: <span class="number">0</span>, <span class="string">'res'</span>: <span class="string">"failed"</span>, <span class="string">'msg'</span>: <span class="string">"空值没意义"</span>&#125;, status=status.HTTP_200_OK)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    encrypt_text = MyCrypt().my_encrypt(value)</span><br><span class="line">                    <span class="keyword">return</span> Response(&#123;<span class="string">'code'</span>: <span class="number">0</span>, <span class="string">'res'</span>: <span class="string">"success"</span>, <span class="string">'msg'</span>: encrypt_text&#125;, status=status.HTTP_200_OK)</span><br><span class="line">            <span class="keyword">elif</span> key == <span class="string">'ciphertext'</span>:</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> value:</span><br><span class="line">                    <span class="keyword">return</span> Response(&#123;<span class="string">'code'</span>: <span class="number">0</span>, <span class="string">'res'</span>: <span class="string">"failed"</span>, <span class="string">'msg'</span>: <span class="string">"空值没意义"</span>&#125;, status=status.HTTP_200_OK)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    decrypt_text = MyCrypt().my_decrypt(value)</span><br><span class="line">                    <span class="keyword">return</span> Response(&#123;<span class="string">'code'</span>: <span class="number">0</span>, <span class="string">'res'</span>: <span class="string">"success"</span>, <span class="string">'msg'</span>: decrypt_text&#125;, status=status.HTTP_200_OK)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span> Response(&#123;<span class="string">'code'</span>: <span class="number">0</span>, <span class="string">'res'</span>: <span class="string">"failed"</span>, <span class="string">'msg'</span>: <span class="string">"参数错误"</span>&#125;, status=status.HTTP_200_OK)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">return</span> Response(&#123;<span class="string">'code'</span>: <span class="number">0</span>, <span class="string">'res'</span>: <span class="string">"failed"</span>, <span class="string">'msg'</span>: <span class="string">"参数错误"</span>&#125;, status=status.HTTP_200_OK)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RSAkeyView</span><span class="params">(APIView)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, requests, *args, **kwargs)</span>:</span></span><br><span class="line">        private_key, public_key = MyCrypt().gen_rsa_key_pair()</span><br><span class="line">        msg = &#123;<span class="string">"private_key"</span>: private_key.decode(), <span class="string">"public_key"</span>: public_key.decode()&#125;</span><br><span class="line">        <span class="comment"># private_key = private_key.decode()</span></span><br><span class="line">        <span class="keyword">return</span> Response(&#123;<span class="string">'code'</span>: <span class="number">0</span>, <span class="string">'res'</span>: <span class="string">"failed"</span>, <span class="string">'msg'</span>: msg&#125;, status=status.HTTP_200_OK)</span><br></pre></td></tr></table></figure>
</li>
<li><p>效果展示：</p>
<p><img src="FaultList.jpg" alt="Fault"></p>
</li>
</ul>
<h4 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h4><ul>
<li><p>在用户管理中，重写了<code>User</code>，并且采用了 <code>drf-simplejwt</code> 作为登录验证的方式；</p>
</li>
<li><p>在权限方面，去除默认权限，采用自定义权限，利用<code>permission_required</code>做校验；同时也为登录用户提供了一个改密接口和用户中心：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span><span class="params">(AbstractUser)</span>:</span></span><br><span class="line">    user_choices = ((<span class="string">"manager"</span>, <span class="string">"管理人员"</span>), (<span class="string">"staff"</span>, <span class="string">"普通员工"</span>))</span><br><span class="line">    name = models.CharField(max_length=<span class="number">20</span>, default=<span class="string">""</span>, verbose_name=<span class="string">"中文名字"</span>)</span><br><span class="line">    mobile = models.CharField(max_length=<span class="number">11</span>, default=<span class="string">""</span>, verbose_name=<span class="string">"手机号码"</span>,null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    email = models.EmailField(max_length=<span class="number">50</span>, verbose_name=<span class="string">"邮箱"</span>)</span><br><span class="line">    avatar =  models.FileField(upload_to = <span class="string">'avatar/'</span>,verbose_name=<span class="string">'个人头像'</span>,null=<span class="literal">True</span>, blank=<span class="literal">True</span>, default=<span class="string">""</span>)</span><br><span class="line">    department = models.ManyToManyField(<span class="string">"Structure"</span>, blank=<span class="literal">True</span>, verbose_name=<span class="string">"部门"</span>)</span><br><span class="line">    <span class="comment"># post = models.CharField(max_length=50, null=True, blank=True, verbose_name="职位")</span></span><br><span class="line">    post = models.CharField(max_length=<span class="number">50</span>, choices=user_choices, null=<span class="literal">True</span>, blank=<span class="literal">True</span>, verbose_name=<span class="string">"职位"</span>)</span><br><span class="line">    superior = models.ForeignKey(<span class="string">"self"</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>, on_delete=models.SET_NULL, verbose_name=<span class="string">"上级主管"</span>)</span><br><span class="line">    roles = models.ManyToManyField(<span class="string">"Role"</span>, verbose_name=<span class="string">"角色"</span>, blank=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">     </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        db_table = <span class="string">'ops_user'</span></span><br><span class="line">        default_permissions = ()</span><br><span class="line">        permissions = (</span><br><span class="line">            (<span class="string">"account_read_user"</span>, <span class="string">"读取用户信息权限"</span>),</span><br><span class="line">            (<span class="string">"account_change_user"</span>, <span class="string">"更改用户信息权限"</span>),</span><br><span class="line">            (<span class="string">"account_add_user"</span>, <span class="string">"添加用户信息权限"</span>),</span><br><span class="line">            (<span class="string">"account_delete_user"</span>, <span class="string">"删除用户信息权限"</span>),               </span><br><span class="line">        )</span><br><span class="line">        verbose_name = <span class="string">'账户管理'</span></span><br><span class="line">        verbose_name_plural = <span class="string">'用户表'</span></span><br><span class="line">        ordering = [<span class="string">'id'</span>]</span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.username</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">superior_name</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> self.superior:</span><br><span class="line">            <span class="keyword">return</span> self.superior.name</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"无"</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_superior</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> self.superior:</span><br><span class="line">            <span class="keyword">return</span> self.superior.id</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> rest_framework_simplejwt.views <span class="keyword">import</span> TokenObtainPairView</span><br><span class="line"><span class="keyword">from</span> .serializers <span class="keyword">import</span> TokenObtainPairSerializer, UserSerializer, RoleSerializer, StructureSerializer, UserDetailSerializer, UsernameSerializer</span><br><span class="line"><span class="keyword">from</span> ..models <span class="keyword">import</span> User, Role, Structure</span><br><span class="line"><span class="keyword">from</span> rest_framework <span class="keyword">import</span> generics</span><br><span class="line"><span class="keyword">from</span> rest_framework.views <span class="keyword">import</span> APIView</span><br><span class="line"><span class="keyword">from</span> .perms <span class="keyword">import</span> PermsManage</span><br><span class="line"><span class="keyword">from</span> rest_framework.response <span class="keyword">import</span> Response</span><br><span class="line"><span class="keyword">from</span> rest_framework <span class="keyword">import</span> status</span><br><span class="line"><span class="keyword">from</span> django.contrib.auth.decorators <span class="keyword">import</span> permission_required</span><br><span class="line"><span class="keyword">from</span> django.utils.decorators <span class="keyword">import</span> method_decorator</span><br><span class="line"><span class="keyword">from</span> rest_framework.filters <span class="keyword">import</span> SearchFilter</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TokenObtainPairView</span><span class="params">(TokenObtainPairView)</span>:</span></span><br><span class="line">    serializer_class = TokenObtainPairSerializer</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@method_decorator(permission_required('account.account_read_user', login_url=None, raise_exception=True), name='get')</span></span><br><span class="line"><span class="meta">@method_decorator(permission_required('account.account_add_user', login_url=None, raise_exception=True), name='post')</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserListView</span><span class="params">(generics.ListCreateAPIView)</span>:</span></span><br><span class="line">    queryset = User.objects.all()</span><br><span class="line">    serializer_class = UserSerializer</span><br><span class="line">    ordering = [<span class="string">'id'</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">@method_decorator(permission_required('account.account_read_user', login_url=None, raise_exception=True), name='get')</span></span><br><span class="line"><span class="meta">@method_decorator(permission_required('account.account_change_user', login_url=None, raise_exception=True), name='put')</span></span><br><span class="line"><span class="meta">@method_decorator(permission_required('account.account_delete_user', login_url=None, raise_exception=True), name='delete')</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserDetailView</span><span class="params">(generics.RetrieveUpdateDestroyAPIView)</span>:</span></span><br><span class="line">    queryset = User.objects.all()</span><br><span class="line">    serializer_class = UserSerializer</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@method_decorator(permission_required('account.account_read_role', login_url=None, raise_exception=True), name='get')</span></span><br><span class="line"><span class="meta">@method_decorator(permission_required('account.account_add_role', login_url=None, raise_exception=True), name='post')</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RoleListView</span><span class="params">(generics.ListCreateAPIView)</span>:</span></span><br><span class="line">    queryset = Role.objects.all()</span><br><span class="line">    serializer_class = RoleSerializer</span><br><span class="line">    ordering = [<span class="string">'id'</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@method_decorator(permission_required('account.account_read_role', login_url=None, raise_exception=True), name='get')</span></span><br><span class="line"><span class="meta">@method_decorator(permission_required('account.account_change_role', login_url=None, raise_exception=True), name='put')</span></span><br><span class="line"><span class="meta">@method_decorator(permission_required('account.account_delete_role', login_url=None, raise_exception=True), name='delete')</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RoleDetailView</span><span class="params">(generics.RetrieveUpdateDestroyAPIView)</span>:</span></span><br><span class="line">    queryset = Role.objects.all()</span><br><span class="line">    serializer_class = RoleSerializer</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@method_decorator(permission_required('account.account_read_structure', login_url=None, raise_exception=True), name='get')</span></span><br><span class="line"><span class="meta">@method_decorator(permission_required('account.account_add_structure', login_url=None, raise_exception=True), name='post')</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">StructureListView</span><span class="params">(generics.ListCreateAPIView)</span>:</span></span><br><span class="line">    queryset = Structure.objects.all()</span><br><span class="line">    serializer_class = StructureSerializer</span><br><span class="line">    ordering = [<span class="string">'id'</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@method_decorator(permission_required('account.account_read_structure', login_url=None, raise_exception=True), name='get')</span></span><br><span class="line"><span class="meta">@method_decorator(permission_required('account.account_change_structure', login_url=None, raise_exception=True), name='put')</span></span><br><span class="line"><span class="meta">@method_decorator(permission_required('account.account_delete_structure', login_url=None, raise_exception=True), name='delete')</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">StructureDetailView</span><span class="params">(generics.RetrieveUpdateDestroyAPIView)</span>:</span></span><br><span class="line">    queryset = Structure.objects.all()</span><br><span class="line">    serializer_class = StructureSerializer</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PermsView</span><span class="params">(APIView)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request, *args, **kwargs)</span>:</span></span><br><span class="line">       <span class="comment"># filter_backends = [SearchFilter,]</span></span><br><span class="line">       <span class="comment"># search_fields = ('name',)</span></span><br><span class="line">        perms_list = PermsManage().get_perms()</span><br><span class="line">        <span class="keyword">return</span> Response(&#123;<span class="string">'code'</span>: <span class="number">0</span>, <span class="string">'res'</span>: <span class="string">"success"</span>, <span class="string">'msg'</span>: perms_list&#125;, status=status.HTTP_200_OK)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UsernameView</span><span class="params">(generics.ListAPIView)</span>:</span></span><br><span class="line">    queryset = User.objects.all()</span><br><span class="line">    serializer_class = UsernameSerializer</span><br><span class="line">    ordering = [<span class="string">'id'</span>]</span><br><span class="line">    filter_backends = [SearchFilter,]</span><br><span class="line">    search_fields = (<span class="string">'name'</span>,)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ChangePasswd</span><span class="params">(APIView)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self, request, *args, **kwargs)</span>:</span></span><br><span class="line">        user = request.user</span><br><span class="line">        <span class="keyword">if</span> user.id != request.user.id <span class="keyword">and</span> request.user.is_superuser <span class="keyword">is</span> <span class="literal">False</span>:<span class="keyword">return</span> <span class="string">"您无权操作此项"</span>  </span><br><span class="line">             </span><br><span class="line">        <span class="keyword">elif</span> user.id == request.user.id <span class="keyword">or</span> request.user.is_superuser:</span><br><span class="line">            <span class="keyword">if</span> request.POST.get(<span class="string">'password'</span>) == request.POST.get(<span class="string">'c_password'</span>):</span><br><span class="line">                <span class="keyword">try</span>:                 </span><br><span class="line">                    user.set_password(request.POST.get(<span class="string">'password'</span>))</span><br><span class="line">                    user.save()</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">                <span class="keyword">except</span> Exception <span class="keyword">as</span> ex:</span><br><span class="line">                    <span class="keyword">return</span> <span class="string">"密码修改失败：%s"</span> % str(ex) </span><br><span class="line">        <span class="keyword">return</span> <span class="string">"修改密码失败"</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserProfileView</span><span class="params">(generics.RetrieveUpdateAPIView)</span>:</span></span><br><span class="line">    serializer_class = UserDetailSerializer</span><br><span class="line">    queryset = User.objects.all()</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_object</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.request.user</span><br></pre></td></tr></table></figure>
</li>
<li><p>将自定义权限筛选出来给用户赋予相应的权限：</p>
<p><img src="PermList.jpg" alt="Perm"></p>
</li>
</ul>
<h4 id="后续工作计划"><a href="#后续工作计划" class="headerlink" title="后续工作计划"></a>后续工作计划</h4><ul>
<li><p>和前端对接</p>
</li>
<li><p>接入<code>Openldap</code></p>
</li>
<li><p>反序列化值的验证逻辑补充</p>
</li>
</ul>
]]></content>
      <categories>
        <category>工作</category>
        <category>开发</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>django</tag>
        <tag>CMDB</tag>
      </tags>
  </entry>
  <entry>
    <title>nginx-ingress-controller日志的滚动切割</title>
    <url>/2021/10/21/nginx-ingress-controller%E6%97%A5%E5%BF%97%E7%9A%84%E6%BB%9A%E5%8A%A8%E5%88%87%E5%89%B2/</url>
    <content><![CDATA[<ul>
<li><p>前不久线上的集群<code>ingress</code>的一个<code>pod</code>发生了驱逐：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hy-master01 sjl]# check</span><br><span class="line">NAMESPACE                     NAME                                                 READY   STATUS      RESTARTS   AGE</span><br><span class="line">ingress-nginx                 nginx-ingress-controller-6dc776b7bc-nvv8f            0/1     Evicted     0          20d</span><br><span class="line">ingress-nginx                 nginx-ingress-controller-6dc776b7bc-sc6t6            0/1     Evicted     0          20d</span><br><span class="line">ingress-nginx                 nginx-ingress-controller-6dc776b7bc-w85h9            0/1     Evicted     0          20d</span><br><span class="line">ingress-nginx                 nginx-ingress-controller-6dc776b7bc-z9djf            0/1     Evicted     0          20d</span><br><span class="line">ops                           delete-es-index-1634490000-szq5h                     0/1     Completed   0          2d8h</span><br><span class="line">ops                           delete-es-index-1634576400-td5qc                     0/1     Completed   0          32h</span><br><span class="line">ops                           delete-es-index-1634662800-nfj9j                     0/1     Completed   0          8</span><br></pre></td></tr></table></figure>

</li>
</ul>
<a id="more"></a>

<ul>
<li><p>查看原因的时候，显示驱逐原因是<code>DiskPressure</code>：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hy-master01 sjl]# kubectl describe pod -n ingress-nginx nginx-ingress-controller-6dc776b7bc-sc6t6</span><br><span class="line">Name:           nginx-ingress-controller-6dc776b7bc-sc6t6</span><br><span class="line">Namespace:      ingress-nginx</span><br><span class="line">Priority:       0</span><br><span class="line">Node:           hy-node02.xcmg.com/</span><br><span class="line">Start Time:     Wed, 29 Sep 2021 14:19:15 +0800</span><br><span class="line">Labels:         app.kubernetes.io/name=ingress-nginx</span><br><span class="line">                app.kubernetes.io/part-of=ingress-nginx</span><br><span class="line">                pod-template-hash=6dc776b7bc</span><br><span class="line">Annotations:    kubernetes.customized/logging_emptydir_name: logdir</span><br><span class="line">                prometheus.io/port: 10254</span><br><span class="line">                prometheus.io/scrape: true</span><br><span class="line">Status:         Failed</span><br><span class="line">Reason:         Evicted</span><br><span class="line">Message:        Pod The node had condition: [DiskPressure].</span><br><span class="line">IP:</span><br><span class="line">IPs:            &lt;none&gt;</span><br><span class="line">Controlled By:  ReplicaSet/nginx-ingress-controller-6dc776b7bc</span><br></pre></td></tr></table></figure>
</li>
<li><p>经过排查原因是<code>nginx</code>的日志没有做任何处理，结果越攒越多，将磁盘给撑爆了。不要问我为啥没做处理，因为我接手就是这样，没人提，也没啥时间做排查。对于容器的日志，我们对<code>docker</code>做了限制，但为啥没有生效？</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  "insecure-registries":["xxxx","xxxx","xxxx","0.0.0.0/0"],</span><br><span class="line">  "bip": "172.17.0.1/16",</span><br><span class="line">  "exec-opts": ["native.cgroupdriver=systemd"],</span><br><span class="line">  "log-opts": &#123; "max-size" : "100m", "max-file" : "3" &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>查看部署文件发现日志以<code>emptyDir</code>的方式挂载出来了，那么我们就需要日志进行定时切割了：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hy-master01 ingress]# kubectl get deployments.apps -n ingress-nginx nginx-ingress-controller  -o yaml &gt; nginx-ingress-controller.yaml</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><ul>
<li><p>首先需要将日志以 <code>hostPath</code> 的方式挂载到数据机的目录，修改资源清单：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">volumes:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">logdir</span></span><br><span class="line">  <span class="attr">hostPath:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">/mnt/data/log/ingress</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">""</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>其次日志如何切割，可以选择脚本进行每日的定时任务处理，但我们还有<code>lograte</code>工具可以选择，具体使用方式本篇不做介绍：</p>
<ul>
<li><code>logrotate</code> 是<code>linux</code>日志文件管理工具。用于分割日志文件，删除旧的日志文件，并创建新的日志文件，起到“转储”作用。</li>
</ul>
</li>
<li><p>虽然生产环境中，<code>ingress</code>会被固定调度到某些节点，但为了部署的简便和一致，我们考虑将<code>logrorate</code>作为<code>sidecar</code>部署到一起。</p>
</li>
<li><p>当然在我们目前使用的环境中以<code>daemonset</code>的方式在每个节点都部署了<code>logrorate</code>来切割集群产生的各类日志，这种方式比较简单，下面我们来实现<code>sidecar</code>的方式：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hy-master01 ui]# kubectl get ds -n kube-system logrotate</span><br><span class="line">NAME        DESIRED   CURRENT   READY   UP-TO-DATE   AVAILABLE   NODE SELECTOR   AGE</span><br><span class="line">logrotate   21        21        21      21           21          &lt;none&gt;          280d</span><br></pre></td></tr></table></figure>



</li>
</ul>
<h3 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h3><ul>
<li><p>配置 <code>logrorate</code> ：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hy-master01 ingress]# cat &lt;&lt;EOF &gt;nginx.log</span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> /mnt/data/<span class="built_in">log</span>/ingress/access.log &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     rotate 7</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     daily</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     maxsize 50M</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     copytruncate</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     missingok</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     create 0644 root root</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> &#125;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> EOF</span></span><br></pre></td></tr></table></figure>
</li>
<li><p><code>nginx-ingress-controller</code>默认以<code>33</code>这个用户登录启动容器的，因此<code>hostPath</code>路径时存在权限问题。需要手动在机器上执行<code>chown -R 33:33 /data/log/nginx_ingress_controller</code>。为了实现自动化，我们在部署中增加一个<code>init</code>容器来自动执行，<code>init</code>容器执行的脚本，在脚本我们增加了一些内核参数的优化：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">mount -o remount rw /proc/sys</span><br><span class="line">sysctl -w net.core.somaxconn=65535</span><br><span class="line">sysctl -w net.ipv4.ip_local_port_range="1024 65535"</span><br><span class="line">sysctl -w fs.file-max=1048576</span><br><span class="line">sysctl -w fs.inotify.max_user_instances=16384</span><br><span class="line">sysctl -w fs.inotify.max_user_watches=524288</span><br><span class="line">sysctl -w fs.inotify.max_queued_events=16384</span><br><span class="line">logdir=$LOG_DIR</span><br><span class="line">userID=$USER_ID</span><br><span class="line">echo "set dir: $logdir 's group as $userID"</span><br><span class="line">chown  -R  $userID:$userID $logdir</span><br></pre></td></tr></table></figure>
</li>
<li><p>现在我们就可以创建出部署的资源清单：</p>
<ul>
<li><p>首先将脚本作为<code>init</code>容器的<code>configmap</code> ：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hy-master01 ingress]# kubectl create cm set-logdir -n ingress-nginx --from-file=./set_logdir.sh --dry-run -o yaml &gt; init-set-logdir-cm.yaml</span><br><span class="line"></span><br><span class="line">[root@hy-master01 ingress]# cat init-set-logdir-cm.yaml</span><br><span class="line">apiVersion: v1</span><br><span class="line">data:</span><br><span class="line">  set_logdir.sh: |</span><br><span class="line">    #!/bin/bash</span><br><span class="line">    mount -o remount rw /proc/sys</span><br><span class="line">    sysctl -w net.core.somaxconn=65535</span><br><span class="line">    sysctl -w net.ipv4.ip_local_port_range="1024 65535"</span><br><span class="line">    sysctl -w fs.file-max=1048576</span><br><span class="line">    sysctl -w fs.inotify.max_user_instances=16384</span><br><span class="line">    sysctl -w fs.inotify.max_user_watches=524288</span><br><span class="line">    sysctl -w fs.inotify.max_queued_events=16384</span><br><span class="line">    logdir=$LOG_DIR</span><br><span class="line">    userID=$USER_ID</span><br><span class="line">    echo "set dir: $logdir 's group as $userID"</span><br><span class="line">    chown  -R  $userID:$userID $logdir</span><br><span class="line">kind: ConfigMap</span><br><span class="line">metadata:</span><br><span class="line">  creationTimestamp: null</span><br><span class="line">  name: set-logdir</span><br><span class="line">  namespace: ingress-nginx</span><br></pre></td></tr></table></figure>
</li>
<li><p>将<code>logrorate</code>的配置作为<code>sidecar</code>容器的<code>configmap</code>：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hy-master01 ingress]# kubectl create cm logrorate-conf -n ingress-nginx --from-file=./nginx.log --dry-run -o yaml  &gt; logrorate-conf-cm.yaml</span><br><span class="line"></span><br><span class="line">[root@hy-master01 ingress]# cat logrorate-conf-cm.yaml</span><br><span class="line">apiVersion: v1</span><br><span class="line">data:</span><br><span class="line">  nginx.log: |</span><br><span class="line">    /mnt/data/log/ingress/access.log &#123;</span><br><span class="line">        rotate 7</span><br><span class="line">        daily</span><br><span class="line">        maxsize 50M</span><br><span class="line">        copytruncate</span><br><span class="line">        missingok</span><br><span class="line">        create 0644 www-data root</span><br><span class="line">    &#125;</span><br><span class="line">    /mnt/data/log/ingress//error.log &#123;</span><br><span class="line">        rotate 7</span><br><span class="line">        daily</span><br><span class="line">        maxsize 50M</span><br><span class="line">        copytruncate</span><br><span class="line">        missingok</span><br><span class="line">        create 0644 root root</span><br><span class="line">    &#125;</span><br><span class="line">kind: ConfigMap</span><br><span class="line">metadata:</span><br><span class="line">  creationTimestamp: null</span><br><span class="line">  name: logrorate-conf</span><br><span class="line">  namespace: ingress-nginx</span><br></pre></td></tr></table></figure>
</li>
<li><p>其余保持不变，下面就是一份部署的清单：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">deployment.kubernetes.io/revision:</span> <span class="string">"1"</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-ingress-controller</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">progressDeadlineSeconds:</span> <span class="number">600</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">revisionHistoryLimit:</span> <span class="number">10</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">      <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">strategy:</span></span><br><span class="line">    <span class="attr">rollingUpdate:</span></span><br><span class="line">      <span class="attr">maxSurge:</span> <span class="number">25</span><span class="string">%</span></span><br><span class="line">      <span class="attr">maxUnavailable:</span> <span class="number">25</span><span class="string">%</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">RollingUpdate</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">annotations:</span></span><br><span class="line">        <span class="attr">kubernetes.customized/logging_emptydir_name:</span> <span class="string">logdir</span></span><br><span class="line">        <span class="attr">prometheus.io/port:</span> <span class="string">"10254"</span></span><br><span class="line">        <span class="attr">prometheus.io/scrape:</span> <span class="string">"true"</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">        <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="comment"># 增加一个init容器</span></span><br><span class="line">      <span class="attr">initContainers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">init-sys</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">centos:centos7.9.2009</span></span><br><span class="line">          <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">          <span class="attr">env:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">LOG_DIR</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">/var/log/nginx</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">USER_ID</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">"33"</span></span><br><span class="line">          <span class="attr">command:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">"/bin/sh"</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">"-c"</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">"/root/set_logdir.sh"</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">scripts</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/root</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">logdir</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/var/log/nginx</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="comment"># sidecar容器</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">logrorate</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">blacklabelops/logrotate:1.3</span></span><br><span class="line">          <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">          <span class="attr">env:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">"LOGROTATE_CRONSCHEDULE"</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">"* 1 * * * *"</span></span><br><span class="line">          <span class="attr">resources:</span></span><br><span class="line">            <span class="attr">requests:</span></span><br><span class="line">              <span class="attr">cpu:</span> <span class="string">100m</span></span><br><span class="line">              <span class="attr">memory:</span> <span class="string">200Mi</span></span><br><span class="line">            <span class="attr">limits:</span></span><br><span class="line">              <span class="attr">cpu:</span> <span class="string">200m</span></span><br><span class="line">              <span class="attr">memory:</span> <span class="string">500Mi</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">logdir</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/var/log/nginx</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">logrotateconf</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/etc/logrotate.d/nginx.log</span></span><br><span class="line">              <span class="attr">subPath:</span> <span class="string">nginx.log</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">args:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">/nginx-ingress-controller</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--configmap=$(POD_NAMESPACE)/nginx-configuration</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--tcp-services-configmap=$(POD_NAMESPACE)/tcp-services</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--annotations-prefix=nginx.ingress.kubernetes.io</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--enable-dynamic-certificates=false</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--cluster-balancer=true</span></span><br><span class="line">          <span class="attr">env:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">POD_NAME</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">fieldRef:</span></span><br><span class="line">                  <span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line">                  <span class="attr">fieldPath:</span> <span class="string">metadata.name</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">POD_NAMESPACE</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">fieldRef:</span></span><br><span class="line">                  <span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line">                  <span class="attr">fieldPath:</span> <span class="string">metadata.namespace</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">nginx-ingress-controller:0.26.0</span></span><br><span class="line">          <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">          <span class="attr">resources:</span></span><br><span class="line">            <span class="attr">requests:</span></span><br><span class="line">              <span class="attr">cpu:</span> <span class="number">2</span></span><br><span class="line">              <span class="attr">memory:</span> <span class="string">4Gi</span></span><br><span class="line">            <span class="attr">limits:</span></span><br><span class="line">              <span class="attr">cpu:</span> <span class="number">4</span></span><br><span class="line">              <span class="attr">memory:</span> <span class="string">8Gi</span></span><br><span class="line">          <span class="attr">livenessProbe:</span></span><br><span class="line">            <span class="attr">failureThreshold:</span> <span class="number">3</span></span><br><span class="line">            <span class="attr">httpGet:</span></span><br><span class="line">              <span class="attr">path:</span> <span class="string">/healthz</span></span><br><span class="line">              <span class="attr">port:</span> <span class="number">10254</span></span><br><span class="line">              <span class="attr">scheme:</span> <span class="string">HTTP</span></span><br><span class="line">            <span class="attr">initialDelaySeconds:</span> <span class="number">10</span></span><br><span class="line">            <span class="attr">periodSeconds:</span> <span class="number">10</span></span><br><span class="line">            <span class="attr">successThreshold:</span> <span class="number">1</span></span><br><span class="line">            <span class="attr">timeoutSeconds:</span> <span class="number">10</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">nginx-ingress-controller</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line">              <span class="attr">hostPort:</span> <span class="number">80</span></span><br><span class="line">              <span class="attr">name:</span> <span class="string">http</span></span><br><span class="line">              <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">443</span></span><br><span class="line">              <span class="attr">hostPort:</span> <span class="number">443</span></span><br><span class="line">              <span class="attr">name:</span> <span class="string">https</span></span><br><span class="line">              <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">          <span class="attr">readinessProbe:</span></span><br><span class="line">            <span class="attr">failureThreshold:</span> <span class="number">3</span></span><br><span class="line">            <span class="attr">httpGet:</span></span><br><span class="line">              <span class="attr">path:</span> <span class="string">/healthz</span></span><br><span class="line">              <span class="attr">port:</span> <span class="number">10254</span></span><br><span class="line">              <span class="attr">scheme:</span> <span class="string">HTTP</span></span><br><span class="line">            <span class="attr">periodSeconds:</span> <span class="number">10</span></span><br><span class="line">            <span class="attr">successThreshold:</span> <span class="number">1</span></span><br><span class="line">            <span class="attr">timeoutSeconds:</span> <span class="number">10</span></span><br><span class="line">          <span class="attr">securityContext:</span></span><br><span class="line">            <span class="attr">allowPrivilegeEscalation:</span> <span class="literal">true</span></span><br><span class="line">            <span class="attr">capabilities:</span></span><br><span class="line">              <span class="attr">add:</span></span><br><span class="line">                <span class="bullet">-</span> <span class="string">NET_BIND_SERVICE</span></span><br><span class="line">              <span class="attr">drop:</span></span><br><span class="line">                <span class="bullet">-</span> <span class="string">ALL</span></span><br><span class="line">            <span class="attr">runAsUser:</span> <span class="number">33</span></span><br><span class="line">          <span class="attr">terminationMessagePath:</span> <span class="string">/dev/termination-log</span></span><br><span class="line">          <span class="attr">terminationMessagePolicy:</span> <span class="string">File</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/var/log/nginx</span></span><br><span class="line">              <span class="attr">name:</span> <span class="string">logdir</span></span><br><span class="line">      <span class="attr">dnsPolicy:</span> <span class="string">ClusterFirst</span></span><br><span class="line">      <span class="attr">hostNetwork:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">nodeSelector:</span></span><br><span class="line">        <span class="attr">nodetype:</span> <span class="string">loadbalance</span></span><br><span class="line">      <span class="attr">restartPolicy:</span> <span class="string">Always</span></span><br><span class="line">      <span class="attr">schedulerName:</span> <span class="string">default-scheduler</span></span><br><span class="line">      <span class="attr">securityContext:</span> <span class="string">&#123;&#125;</span></span><br><span class="line">      <span class="attr">serviceAccount:</span> <span class="string">nginx-ingress-serviceaccount</span></span><br><span class="line">      <span class="attr">serviceAccountName:</span> <span class="string">nginx-ingress-serviceaccount</span></span><br><span class="line">      <span class="attr">terminationGracePeriodSeconds:</span> <span class="number">30</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">logdir</span></span><br><span class="line">          <span class="attr">hostPath:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/mnt/data/log/ingress</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">scripts</span></span><br><span class="line">          <span class="attr">configMap:</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">set-logdir</span></span><br><span class="line">            <span class="attr">defaultMode:</span> <span class="number">0700</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">logrotateconf</span></span><br><span class="line">          <span class="attr">configMap:</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">logrorate-conf</span></span><br><span class="line">            <span class="attr">items:</span></span><br><span class="line">              <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">nginx.log</span></span><br><span class="line">                <span class="attr">path:</span> <span class="string">nginx.log</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">set_logdir.sh:</span> <span class="string">|</span></span><br><span class="line">    <span class="comment">#!/bin/bash</span></span><br><span class="line">    <span class="string">mount</span> <span class="string">-o</span> <span class="string">remount</span> <span class="string">rw</span> <span class="string">/proc/sys</span></span><br><span class="line">    <span class="string">sysctl</span> <span class="string">-w</span> <span class="string">net.core.somaxconn=65535</span></span><br><span class="line">    <span class="string">sysctl</span> <span class="string">-w</span> <span class="string">net.ipv4.ip_local_port_range="1024</span> <span class="number">65535</span><span class="string">"</span></span><br><span class="line"><span class="string">    sysctl -w fs.file-max=1048576</span></span><br><span class="line"><span class="string">    sysctl -w fs.inotify.max_user_instances=16384</span></span><br><span class="line"><span class="string">    sysctl -w fs.inotify.max_user_watches=524288</span></span><br><span class="line"><span class="string">    sysctl -w fs.inotify.max_queued_events=16384</span></span><br><span class="line"><span class="string">    logdir=$LOG_DIR</span></span><br><span class="line"><span class="string">    userID=$USER_ID</span></span><br><span class="line"><span class="string">    echo "</span><span class="attr">set dir:</span> <span class="string">$logdir</span> <span class="string">'s group as $userID"</span></span><br><span class="line"><span class="string">    chown  -R  $userID:$userID $logdir</span></span><br><span class="line"><span class="string">kind: ConfigMap</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  name: set-logdir</span></span><br><span class="line"><span class="string">  namespace: ingress-nginx</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">apiVersion: v1</span></span><br><span class="line"><span class="string">data:</span></span><br><span class="line"><span class="string">  nginx.log: |</span></span><br><span class="line"><span class="string">    /mnt/data/log/ingress/access.log &#123;</span></span><br><span class="line"><span class="string">        rotate 7</span></span><br><span class="line"><span class="string">        daily</span></span><br><span class="line"><span class="string">        maxsize 50M</span></span><br><span class="line"><span class="string">        copytruncate</span></span><br><span class="line"><span class="string">        missingok</span></span><br><span class="line"><span class="string">        create 0644 www-data root</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    /mnt/data/log/ingress/error.log &#123;</span></span><br><span class="line"><span class="string">        rotate 7</span></span><br><span class="line"><span class="string">        daily</span></span><br><span class="line"><span class="string">        maxsize 50M</span></span><br><span class="line"><span class="string">        copytruncate</span></span><br><span class="line"><span class="string">        missingok</span></span><br><span class="line"><span class="string">        create 0644 root root</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">kind: ConfigMap</span></span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="string">  name: logrorate-conf</span></span><br><span class="line"><span class="string">  namespace: ingress-nginx</span></span><br></pre></td></tr></table></figure>

</li>
</ul>
</li>
</ul>
<h3 id="在测试环境验证"><a href="#在测试环境验证" class="headerlink" title="在测试环境验证"></a>在测试环境验证</h3><ul>
<li><p>部署，下面就实现了部署，当然还有时区挂载设置，权限控制之类的，我们暂时不做处理：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hy-master01 ingress]# kubectl apply -f nginx-ingress-controller-logrotate.yaml   deployment.apps/nginx-ingress-controller created</span><br><span class="line">configmap/set-logdir created</span><br><span class="line">configmap/logrorate-conf created</span><br><span class="line">[root@hy-master01 ingress]# kubectl get pod -n ingress-nginx</span><br><span class="line">NAME                                        READY   STATUS            RESTARTS   AGE</span><br><span class="line">ingress-mgr-go-66b7bd7879-zjt5l             1/1     Running           2          57d</span><br><span class="line">nginx-ingress-controller-868c7dc58d-d9z4c   0/2     PodInitializing   0          5s</span><br><span class="line">[root@hy-master01 ingress]# kubectl get pod -n ingress-nginx -w</span><br><span class="line">NAME                                        READY   STATUS            RESTARTS   AGE</span><br><span class="line">ingress-mgr-go-66b7bd7879-zjt5l             1/1     Running           2          57d</span><br><span class="line">nginx-ingress-controller-868c7dc58d-d9z4c   0/2     PodInitializing   0          31s</span><br><span class="line">nginx-ingress-controller-868c7dc58d-d9z4c   1/2     Running           0          44s</span><br><span class="line">nginx-ingress-controller-868c7dc58d-d9z4c   2/2     Running           0          53s</span><br></pre></td></tr></table></figure>
</li>
<li><p>如下图，我们就实现了日志切割功能：</p>
<p><img src="ingress-nginx.jpg" alt="ingress"></p>
</li>
</ul>
]]></content>
      <categories>
        <category>工作</category>
        <category>云原生</category>
      </categories>
      <tags>
        <tag>k8s</tag>
        <tag>ingress</tag>
        <tag>log</tag>
      </tags>
  </entry>
  <entry>
    <title>prometheus exporter开发</title>
    <url>/2022/01/12/prometheus-exporter%E5%BC%80%E5%8F%91/</url>
    <content><![CDATA[<h2 id="prometheus-exporter-开发"><a href="#prometheus-exporter-开发" class="headerlink" title="prometheus exporter 开发"></a><code>prometheus exporter</code> 开发</h2><p><code>Exporter</code> 本身是一个 <code>http</code> 服务，其指标结果只要符合 <code>Prometheus</code> 规范就可以被 <code>Prometheus</code> 使用。而 <code>prometheus</code> 提供了一个<code>go</code>语言的包来简化开发工作。</p>
<h3 id="client-golang"><a href="#client-golang" class="headerlink" title="client_golang"></a><code>client_golang</code></h3><p><code>Prometheus</code> 的 <code>client</code>库提供了实现自定义<code>Exportor</code>的接口，<code>Collector</code>接口定义了两个方法 <code>Describe</code> 和 <code>Collect</code>，实现这两个方法就可以暴露自定义的数据：</p>
<a id="more"></a>

<ul>
<li><code>Describe(chan&lt;- *Desc)</code></li>
<li><code>Collect(chan&lt;- Metric)</code></li>
</ul>
<h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><ul>
<li><p>添加 <code>prometheus metrics</code> <code>http</code> 服务，并在某个服务端口上监听 ：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> (</span><br><span class="line">    listenAddr  = flag.String(<span class="string">"web.listen-port"</span>, <span class="string">"9000"</span>, <span class="string">"An port to listen on for web interface and telemetry."</span>)</span><br><span class="line">    metricsPath = flag.String(<span class="string">"web.telemetry-path"</span>, <span class="string">"/metrics"</span>, <span class="string">"A path under which to expose metrics."</span>)</span><br><span class="line">    metricsNamespace = flag.String(<span class="string">"metric.namespace"</span>, <span class="string">"ECSDATA"</span>, <span class="string">"Prometheus metrics namespace, as the prefix of metrics name"</span>)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    flag.Parse()</span><br><span class="line">    metrics := collect.NewMetrics(*metricsNamespace)</span><br><span class="line">    registry := prometheus.NewRegistry()</span><br><span class="line">    registry.MustRegister(metrics)</span><br><span class="line">    http.Handle(*metricsPath, promhttp.HandlerFor(registry, promhttp.HandlerOpts&#123;&#125;))</span><br><span class="line">    http.HandleFunc(<span class="string">"/"</span>, <span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">        w.Write([]<span class="keyword">byte</span>(<span class="string">`&lt;html&gt;</span></span><br><span class="line"><span class="string">			&lt;head&gt;&lt;title&gt;A Prometheus Exporter&lt;/title&gt;&lt;/head&gt;</span></span><br><span class="line"><span class="string">			&lt;body&gt;</span></span><br><span class="line"><span class="string">			&lt;h1&gt;A Prometheus Exporter&lt;/h1&gt;</span></span><br><span class="line"><span class="string">			&lt;p&gt;&lt;a href='/metrics'&gt;Metrics&lt;/a&gt;&lt;/p&gt;</span></span><br><span class="line"><span class="string">			&lt;/body&gt;</span></span><br><span class="line"><span class="string">			&lt;/html&gt;`</span>))</span><br><span class="line">    &#125;)</span><br><span class="line">    log.Printf(<span class="string">"Starting Server at http://localhost:%s%s"</span>, *listenAddr, *metricsPath)</span><br><span class="line">    log.Fatal(http.ListenAndServe(<span class="string">":"</span>+*listenAddr, <span class="literal">nil</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>实现<code>Collector</code>接口</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *Metrics)</span> <span class="title">Describe</span><span class="params">(ch <span class="keyword">chan</span>&lt;- *prometheus.Desc)</span></span> &#123;</span><br><span class="line">    <span class="keyword">for</span> _,m := <span class="keyword">range</span> c.metrics &#123;</span><br><span class="line">        ch &lt;- m</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *Metrics)</span> <span class="title">Collect</span><span class="params">(ch <span class="keyword">chan</span>&lt;- prometheus.Metric)</span></span> &#123;</span><br><span class="line">    c.mutex.Lock()</span><br><span class="line">    <span class="keyword">defer</span> c.mutex.Unlock()</span><br><span class="line"></span><br><span class="line">    mockCounterMetricData, mockGaugeMetricData, mockCpuMetricData, mockDiskMetricData, mockMemMetricData, mockIpMetricData := c.GenerateMockData()</span><br><span class="line">    <span class="keyword">for</span> host, currentValue := <span class="keyword">range</span> mockCounterMetricData &#123;</span><br><span class="line">        ch &lt;- prometheus.MustNewConstMetric(c.metrics[<span class="string">"my_counter_metric"</span>], prometheus.CounterValue, <span class="keyword">float64</span>(currentValue), host)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> host, currentValue := <span class="keyword">range</span> mockGaugeMetricData &#123;</span><br><span class="line">        ch &lt;-prometheus.MustNewConstMetric(c.metrics[<span class="string">"my_gauge_metric"</span>], prometheus.GaugeValue,<span class="keyword">float64</span>(currentValue),host)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> host, currentValue := <span class="keyword">range</span> mockCpuMetricData &#123;</span><br><span class="line">        ch &lt;-prometheus.MustNewConstMetric(c.metrics[<span class="string">"my_cpu_metric"</span>], prometheus.GaugeValue,<span class="keyword">float64</span>(currentValue),host)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> host, currentValue := <span class="keyword">range</span> mockDiskMetricData &#123;</span><br><span class="line">        ch &lt;-prometheus.MustNewConstMetric(c.metrics[<span class="string">"my_disk_metric"</span>], prometheus.GaugeValue,<span class="keyword">float64</span>(currentValue),host)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> host, currentValue := <span class="keyword">range</span> mockMemMetricData &#123;</span><br><span class="line">        ch &lt;-prometheus.MustNewConstMetric(c.metrics[<span class="string">"my_mem_metric"</span>], prometheus.GaugeValue,<span class="keyword">float64</span>(currentValue),host)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> host, currentValue := <span class="keyword">range</span> mockIpMetricData &#123;</span><br><span class="line">        ch &lt;-prometheus.MustNewConstMetric(c.metrics[<span class="string">"my_ip_metric"</span>], prometheus.CounterValue,<span class="keyword">float64</span>(currentValue),host)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>用 <code>gopsutil</code> 来获取监控指标，代码略；</p>
</li>
</ul>
<h3 id="展示"><a href="#展示" class="headerlink" title="展示"></a>展示</h3><p><img src="1.JPG" alt="1"></p>
<p><img src="2.JPG" alt="2"></p>
]]></content>
      <categories>
        <category>工作</category>
        <category>开发</category>
      </categories>
      <tags>
        <tag>go</tag>
        <tag>prometheus</tag>
        <tag>云原生</tag>
      </tags>
  </entry>
  <entry>
    <title>terraform provider开发</title>
    <url>/2022/02/17/terraform-provider%E5%BC%80%E5%8F%91/</url>
    <content><![CDATA[<h2 id="Terraform-provider-开发"><a href="#Terraform-provider-开发" class="headerlink" title="Terraform provider 开发"></a><code>Terraform provider</code> 开发</h2><p><code>Terraform</code> 是 <code>IAC</code> (基础设施即代码) 的最佳开源工具之一，几乎所有的云平台都会提供 <code>Terraform Provider</code> 来供使用者能自动化的创建各种云资源。 同时 <code>Terraform</code> 是一个高度可扩展的工具，通过 <code>Provider</code> 来支持新的基础架构，我们可以通过自己开发 <code>Provider</code> 对大多数资源进行管理。下面就展示一个 和<code>Elasticsearc</code> 相关的 <code>Terraform Provider</code>的<code>demo</code> 。</p>
<a id="more"></a>

<h3 id="项目结构"><a href="#项目结构" class="headerlink" title="项目结构"></a>项目结构</h3><p>根据 <code>Terraform</code> 官方文档，一个基本的 <code>Terraform provider</code> 大致会有以下几个部分组成：</p>
<ul>
<li><code>provider.go</code> ：这是插件的根源，用于描述插件的属性，如：配置的秘钥，支持的资源列表，回调配置等</li>
<li><code>data_source_*.go</code> ：定义的一些用于读调用的资源，主要是查询接口</li>
<li><code>resource_*.go</code> ：定义的一些写调用的资源，包含资源增删改查接口</li>
<li><code>service_*.go</code> ：按资源大类划分的一些公共方法</li>
<li><code>import_*.go</code> ：导入现有资源</li>
</ul>
<p>这些部分也不是必须的，例如 <code>import_*.go</code>，<code>data_source_*.go</code> 等。比如我们这个<code>demo</code>。</p>
<p><img src="1.jpg" alt=""></p>
<h3 id="Provider"><a href="#Provider" class="headerlink" title="Provider"></a><code>Provider</code></h3><ul>
<li><p>首先需要做的就是实现一个 <code>terraform.ResourceProvider</code></p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> es</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">"context"</span></span><br><span class="line">    <span class="string">"net/url"</span></span><br><span class="line">    <span class="string">"strings"</span></span><br><span class="line"></span><br><span class="line">    elastic <span class="string">"github.com/elastic/go-elasticsearch/v7"</span></span><br><span class="line">    <span class="string">"github.com/hashicorp/terraform-plugin-sdk/v2/diag"</span></span><br><span class="line">    <span class="string">"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Provider</span><span class="params">()</span> *<span class="title">schema</span>.<span class="title">Provider</span></span> &#123;</span><br><span class="line">    <span class="comment">//TODO</span></span><br><span class="line">    <span class="keyword">return</span> &amp;schema.Provider&#123;</span><br><span class="line">        Schema: <span class="keyword">map</span>[<span class="keyword">string</span>]*schema.Schema&#123;</span><br><span class="line">            <span class="string">"urls"</span>: &#123;</span><br><span class="line">                Type:        schema.TypeString,</span><br><span class="line">                Required:    <span class="literal">true</span>,</span><br><span class="line">                DefaultFunc: schema.EnvDefaultFunc(<span class="string">"ELASTICSEARCH_URLS"</span>, <span class="literal">nil</span>),</span><br><span class="line">                Description: <span class="string">"Elasticsearch URLs"</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">"username"</span>: &#123;</span><br><span class="line">                Type:        schema.TypeString,</span><br><span class="line">                Optional:    <span class="literal">true</span>,</span><br><span class="line">                DefaultFunc: schema.EnvDefaultFunc(<span class="string">"ELASTICSEARCH_USERNAME"</span>, <span class="literal">nil</span>),</span><br><span class="line">                Description: <span class="string">"Username"</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">"password"</span>: &#123;</span><br><span class="line">                Type:        schema.TypeString,</span><br><span class="line">                Optional:    <span class="literal">true</span>,</span><br><span class="line">                DefaultFunc: schema.EnvDefaultFunc(<span class="string">"ELASTICSEARCH_PASSWORD"</span>, <span class="literal">nil</span>),</span><br><span class="line">                Description: <span class="string">"Password"</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">        ResourcesMap: <span class="keyword">map</span>[<span class="keyword">string</span>]*schema.Resource&#123;</span><br><span class="line">            <span class="string">"elasticsearch_snapshot_repository"</span>: resourceElasticsearchSnapshotRepository(),</span><br><span class="line">        &#125;,</span><br><span class="line">        ConfigureContextFunc: providerConfigure,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">providerConfigure</span><span class="params">(c context.Context, data *schema.ResourceData)</span> <span class="params">(<span class="keyword">interface</span>&#123;&#125;, diag.Diagnostics)</span></span> &#123;</span><br><span class="line">    URLs := strings.Split(data.Get(<span class="string">"urls"</span>).(<span class="keyword">string</span>), <span class="string">","</span>)</span><br><span class="line">    username := data.Get(<span class="string">"username"</span>).(<span class="keyword">string</span>)</span><br><span class="line">    password := data.Get(<span class="string">"password"</span>).(<span class="keyword">string</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> diags diag.Diagnostics</span><br><span class="line">    <span class="keyword">for</span> _, rawURL := <span class="keyword">range</span> URLs &#123;</span><br><span class="line">        _, err := url.Parse(rawURL)</span><br><span class="line">        <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">nil</span>, diag.FromErr(err)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cfg := elastic.Config&#123;</span><br><span class="line">        Addresses: URLs,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> username != <span class="string">""</span> &amp;&amp; password != <span class="string">""</span> &#123;</span><br><span class="line">        cfg.Username = username</span><br><span class="line">        cfg.Password = password</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    client, err := elastic.NewClient(cfg)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span>, diag.FromErr(err)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> client, diags</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>以上的代码表示函数<code>Provider()</code>会返回一个带有必要<code>configuration</code>的<code>terraform.ResourceProvider</code>：</p>
<ul>
<li><code>Schema: provider</code>所需的参数列表，<code>map</code>类型；</li>
<li><code>ResourcesMap：provider</code>所管理的<code>resource</code>；</li>
<li><code>ConfigureContextFunc</code>：提供了实例化、配置客户端<code>API</code>调用的函数；</li>
</ul>
</li>
<li><p>测试：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> es</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">"context"</span></span><br><span class="line">    <span class="string">"testing"</span></span><br><span class="line"></span><br><span class="line">    <span class="string">"github.com/hashicorp/terraform-plugin-sdk/v2/diag"</span></span><br><span class="line">    <span class="string">"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> testAccProviders <span class="keyword">map</span>[<span class="keyword">string</span>]*schema.Provider</span><br><span class="line"><span class="keyword">var</span> testAccProvider *schema.Provider</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line">    testAccProvider = Provider()</span><br><span class="line">    configureContextFunc := testAccProvider.ConfigureContextFunc</span><br><span class="line">    testAccProvider.ConfigureContextFunc = <span class="function"><span class="keyword">func</span><span class="params">(c context.Context, d *schema.ResourceData)</span> <span class="params">(<span class="keyword">interface</span>&#123;&#125;, diag.Diagnostics)</span></span> &#123;</span><br><span class="line">        <span class="keyword">return</span> configureContextFunc(c, d)</span><br><span class="line">    &#125;</span><br><span class="line">    testAccProviders = <span class="keyword">map</span>[<span class="keyword">string</span>]*schema.Provider&#123;</span><br><span class="line">        <span class="string">"elasticsearch"</span>: testAccProvider,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestProvider</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line">    <span class="keyword">if</span> err := Provider().InternalValidate(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">        t.Fatalf(<span class="string">"err: %s"</span>, err)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestProvider_impl</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line">    <span class="keyword">var</span> _ *schema.Provider = Provider()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">testAccPreCheck</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line">    <span class="keyword">if</span> v := os.Getenv(<span class="string">"ELASTICSEARCH_URLS"</span>); v == <span class="string">""</span> &#123;</span><br><span class="line">        t.Fatal(<span class="string">"ELASTICSEARCH_URLS must be set for acceptance tests"</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h3 id="资源的-CRUD"><a href="#资源的-CRUD" class="headerlink" title="资源的 CRUD"></a>资源的 <code>CRUD</code></h3><p><code>Terraform provider</code> 实际是对上游 <code>API</code> 的抽象，因此我们利用 <code>go</code> 的 <code>es</code> 客户端操作 <code>ES</code> 实现对 <code>snpashot repo</code> 的操作；</p>
<ul>
<li><p><code>Schema</code>, 定义了三个参数：</p>
<ul>
<li><code>name</code> ：<code>ForceNew</code>, 如果设置为 <code>true</code>，当资源属性值发生变化时，不会触发修改动作，而是删除该资源，再创建新的资源。</li>
<li><code>type</code>;</li>
<li>·settings· ，是一个 <code>map</code> 类型；</li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">Schema: <span class="keyword">map</span>[<span class="keyword">string</span>]*schema.Schema&#123;</span><br><span class="line">    <span class="string">"name"</span>: &#123;</span><br><span class="line">        Type:     schema.TypeString,</span><br><span class="line">        Required: <span class="literal">true</span>,</span><br><span class="line">        ForceNew: <span class="literal">true</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"type"</span>: &#123;</span><br><span class="line">        Type:     schema.TypeString,</span><br><span class="line">        Required: <span class="literal">true</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"settings"</span>: &#123;</span><br><span class="line">        Type:     schema.TypeMap,</span><br><span class="line">        Required: <span class="literal">true</span>,</span><br><span class="line">        Elem: &amp;schema.Schema&#123;</span><br><span class="line">            Type: schema.TypeString,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p><code>Resource</code> 的 <code>CRUD</code> ：</p>
<ul>
<li>分别定义了<code>Create</code> , <code>Read</code>, <code>Update</code>, <code>Delete</code> 四个方法，这些方法实际上就是对 <code>ES</code> 的具体操作；</li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">resourceElasticsearchSnapshotRepository</span><span class="params">()</span> *<span class="title">schema</span>.<span class="title">Resource</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> &amp;schema.Resource&#123;</span><br><span class="line">        Create: resourceElasticsearchSnapshotRepositoryCreate,</span><br><span class="line">        Read:   resourceElasticsearchSnapshotRepositoryRead,</span><br><span class="line">        Update: resourceElasticsearchSnapshotRepositoryUpdate,</span><br><span class="line">        Delete: resourceElasticsearchSnapshotRepositoryDelete,</span><br><span class="line"></span><br><span class="line">        Importer: &amp;schema.ResourceImporter&#123;</span><br><span class="line">            StateContext: schema.ImportStatePassthroughContext,</span><br><span class="line">        &#125;,</span><br><span class="line">        Description: <span class="string">"Terraform plugin demo for es"</span>,</span><br><span class="line">        Schema: <span class="keyword">map</span>[<span class="keyword">string</span>]*schema.Schema&#123;</span><br><span class="line">            <span class="string">"name"</span>: &#123;</span><br><span class="line">                Type:     schema.TypeString,</span><br><span class="line">                Required: <span class="literal">true</span>,</span><br><span class="line">                ForceNew: <span class="literal">true</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">"type"</span>: &#123;</span><br><span class="line">                Type:     schema.TypeString,</span><br><span class="line">                Required: <span class="literal">true</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">"settings"</span>: &#123;</span><br><span class="line">                Type:     schema.TypeMap,</span><br><span class="line">                Required: <span class="literal">true</span>,</span><br><span class="line">                Elem: &amp;schema.Schema&#123;</span><br><span class="line">                    Type: schema.TypeString,</span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h3 id="验收测试"><a href="#验收测试" class="headerlink" title="验收测试"></a>验收测试</h3><p>如果要成为 <code>Terraform</code>官方认证的 <code>provider</code>，测试用例，也是必不可少的。</p>
<ul>
<li><p>测试用例：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> es</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">"context"</span></span><br><span class="line">    <span class="string">"fmt"</span></span><br><span class="line">    <span class="string">"testing"</span></span><br><span class="line"></span><br><span class="line">    elastic <span class="string">"github.com/elastic/go-elasticsearch/v7"</span></span><br><span class="line">    <span class="string">"github.com/hashicorp/terraform-plugin-sdk/v2/helper/resource"</span></span><br><span class="line">    <span class="string">"github.com/hashicorp/terraform-plugin-sdk/v2/terraform"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestAccElasticsearchSnapshotRepository</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line"></span><br><span class="line">    resource.Test(t, resource.TestCase&#123;</span><br><span class="line">        <span class="comment">// 环境的预检测，看需求，我们定义了需要先设置ES的地址</span></span><br><span class="line">        PreCheck: <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">            testAccPreCheck(t)</span><br><span class="line">        &#125;,</span><br><span class="line">        Providers: testAccProviders,</span><br><span class="line">        <span class="comment">// 配置 资源销毁结果检查函数</span></span><br><span class="line">        CheckDestroy: testCheckElasticsearchSnapshotRepositoryDestroy,</span><br><span class="line">        <span class="comment">// 配置 测试步骤</span></span><br><span class="line">        Steps: []resource.TestStep&#123;</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// 配置 配置内容</span></span><br><span class="line">                Config: testElasticsearchSnapshotRepository,</span><br><span class="line">                <span class="comment">// 配置 验证函数</span></span><br><span class="line">                Check: resource.ComposeTestCheckFunc(</span><br><span class="line">                    testCheckElasticsearchSnapshotRepositoryExists(<span class="string">"elasticsearch_snapshot_repository.test"</span>),</span><br><span class="line">                ),</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                Config: testElasticsearchSnapshotRepositoryUpdate,</span><br><span class="line">                Check: resource.ComposeTestCheckFunc(</span><br><span class="line">                    testCheckElasticsearchSnapshotRepositoryExists(<span class="string">"elasticsearch_snapshot_repository.test"</span>),</span><br><span class="line">                ),</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                ResourceName:      <span class="string">"elasticsearch_snapshot_repository.test"</span>,</span><br><span class="line">                ImportState:       <span class="literal">true</span>,</span><br><span class="line">                ImportStateVerify: <span class="literal">true</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 自定义的测试函数，也就是查询 ES</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">testCheckElasticsearchSnapshotRepositoryExists</span><span class="params">(name <span class="keyword">string</span>)</span> <span class="title">resource</span>.<span class="title">TestCheckFunc</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">func</span><span class="params">(s *terraform.State)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">        <span class="comment">// 这用到了 s.RootModule().Resources 数组</span></span><br><span class="line">        <span class="comment">// 这个数组的属性反应的就是资源状态文件 terraform.tfstate</span></span><br><span class="line">        rs, ok := s.RootModule().Resources[name]</span><br><span class="line">        <span class="keyword">if</span> !ok &#123;</span><br><span class="line">            <span class="keyword">return</span> fmt.Errorf(<span class="string">"Not found: %s"</span>, name)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> rs.Primary.ID == <span class="string">""</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> fmt.Errorf(<span class="string">"No snapshot repository ID is set"</span>)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        meta := testAccProvider.Meta()</span><br><span class="line"></span><br><span class="line">        client := meta.(*elastic.Client)</span><br><span class="line">        res, err := client.API.Snapshot.GetRepository(</span><br><span class="line">            client.API.Snapshot.GetRepository.WithContext(context.Background()),</span><br><span class="line">            client.API.Snapshot.GetRepository.WithPretty(),</span><br><span class="line">            client.API.Snapshot.GetRepository.WithRepository(rs.Primary.ID),</span><br><span class="line">        )</span><br><span class="line">        <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> err</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">defer</span> res.Body.Close()</span><br><span class="line">        <span class="keyword">if</span> res.IsError() &#123;</span><br><span class="line">            <span class="keyword">return</span> fmt.Errorf(<span class="string">"error when get snapshot repository %s: %s"</span>, rs.Primary.ID, res.String())</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// testAccProviders 在测试前会根据 Config 建立测试资源，测试结束后又会全部销毁</span></span><br><span class="line"><span class="comment">// 这个函数就是检查资源是否销毁用的，就是根据ID查询资源是否存在</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">testCheckElasticsearchSnapshotRepositoryDestroy</span><span class="params">(s *terraform.State)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">    <span class="keyword">for</span> _, rs := <span class="keyword">range</span> s.RootModule().Resources &#123;</span><br><span class="line">        <span class="keyword">if</span> rs.Type != <span class="string">"elasticsearch_snapshot_repository"</span> &#123;</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        meta := testAccProvider.Meta()</span><br><span class="line"></span><br><span class="line">        client := meta.(*elastic.Client)</span><br><span class="line">        res, err := client.API.Snapshot.GetRepository(</span><br><span class="line">            client.API.Snapshot.GetRepository.WithContext(context.Background()),</span><br><span class="line">            client.API.Snapshot.GetRepository.WithPretty(),</span><br><span class="line">            client.API.Snapshot.GetRepository.WithRepository(rs.Primary.ID),</span><br><span class="line">        )</span><br><span class="line">        <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> err</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">defer</span> res.Body.Close()</span><br><span class="line">        <span class="keyword">if</span> res.IsError() &#123;</span><br><span class="line">            <span class="keyword">if</span> res.StatusCode == <span class="number">404</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> fmt.Errorf(<span class="string">"Snapshot repository %q still exists"</span>, rs.Primary.ID)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> testElasticsearchSnapshotRepository = <span class="string">`</span></span><br><span class="line"><span class="string">resource "elasticsearch_snapshot_repository" "test" &#123;</span></span><br><span class="line"><span class="string">  name		= "terraform-test"</span></span><br><span class="line"><span class="string">  type 		= "fs"</span></span><br><span class="line"><span class="string">  settings 	= &#123;</span></span><br><span class="line"><span class="string">	"location" =  "/opt/es/snapshot_repo"</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">`</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> testElasticsearchSnapshotRepositoryUpdate = <span class="string">`</span></span><br><span class="line"><span class="string">resource "elasticsearch_snapshot_repository" "test" &#123;</span></span><br><span class="line"><span class="string">  name		= "terraform-test"</span></span><br><span class="line"><span class="string">  type 		= "fs"</span></span><br><span class="line"><span class="string">  settings 	= &#123;</span></span><br><span class="line"><span class="string">	"location" =  "/opt/es/snapshot_repo"</span></span><br><span class="line"><span class="string">	"test"	= "test"</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">`</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>启动一个 <code>ES</code> ：</p>
<ul>
<li><p>注意需要配置 <code>repo</code> 地址：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@Docker es7.8]# cat config/elasticsearch.yml</span><br><span class="line">cluster.name: "docker-cluster"</span><br><span class="line">network.host: 0.0.0.0</span><br><span class="line">path.repo: ["/opt/es/snapshot_repo"]</span><br></pre></td></tr></table></figure>

<p><img src="2.jpg" alt=""></p>
</li>
</ul>
</li>
<li><p>验收测试，可以看到结果已经通过：</p>
<p><img src="3.jpg" alt=""></p>
</li>
</ul>
<h3 id="使用："><a href="#使用：" class="headerlink" title="使用："></a>使用：</h3><ul>
<li><p>编译成 <code>provider</code> 使用：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@Docker terraform-es-plugin]# set version=v1.0.0</span><br><span class="line">[root@Docker terraform-es-plugin]# go build -o terraform-provider-es_$version</span><br></pre></td></tr></table></figure>
</li>
<li><p>将编译好的插件放入指定目录：</p>
<p><img src="4.jpg" alt=""></p>
</li>
<li><p>测试文件：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">provider <span class="string">"es"</span> &#123;</span><br><span class="line">  urls     = <span class="string">"http://192.168.30.11:9200"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">terraform &#123;</span><br><span class="line">  required_providers &#123;</span><br><span class="line">    es = &#123;</span><br><span class="line">      source = <span class="string">"terraform.local/local/es"</span></span><br><span class="line">      version = <span class="string">"1.0.0"</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">resource <span class="string">"elasticsearch_snapshot_repository"</span> <span class="string">"test"</span> &#123;</span><br><span class="line">  provider = es</span><br><span class="line">  name = <span class="string">"terraform-test"</span></span><br><span class="line">  <span class="keyword">type</span> = <span class="string">"fs"</span></span><br><span class="line">  settings = &#123;</span><br><span class="line">    <span class="string">"location"</span> = <span class="string">"/opt/es/snapshot_repo/test_backup"</span></span><br><span class="line">    <span class="string">"compress"</span> : <span class="string">"true"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p><code>terraform init</code></p>
<p><img src="5.jpg" alt=""></p>
</li>
<li><p><code>terraform plan</code></p>
<p><img src="6.jpg" alt=""></p>
</li>
<li><p><code>terraform apply</code></p>
<ul>
<li><p>执行</p>
<p><img src="7.jpg" alt=""></p>
</li>
<li><p>验证，我们看到已经创建了一个 <code>snapshot repo</code></p>
<p><img src="8.jpg" alt=""></p>
</li>
<li><p>后续我们更改<code>resource</code> 资源，测试更新等；</p>
</li>
</ul>
</li>
<li><p><code>terraform destroy</code></p>
<p><img src="9.jpg" alt=""></p>
</li>
</ul>
<p>由此，我们开发了一个 最简单的<code>provider</code> ，之后可以通过<code>resource</code>其中扩展任意 <code>ES</code> 的操作。同时也能帮助我们理解各云厂商的<code>terraform provider</code> 后面的资源创建流程。</p>
]]></content>
      <categories>
        <category>工作</category>
        <category>开发</category>
      </categories>
      <tags>
        <tag>go</tag>
        <tag>terraform</tag>
        <tag>IAC</tag>
      </tags>
  </entry>
  <entry>
    <title>使用OPA Gatekeeper作为kubernetes策略管理引擎</title>
    <url>/2021/10/20/%E4%BD%BF%E7%94%A8OPA-Gatekeeper%E4%BD%9C%E4%B8%BAkubernetes%E7%AD%96%E7%95%A5%E7%AE%A1%E7%90%86%E5%BC%95%E6%93%8E/</url>
    <content><![CDATA[<ul>
<li>为了提高<code>Kubernetes</code>的安全性，您需要在您的环境中控制和限制资源创建。为此，<code>Kubernetes</code>提供了一个称为<code>Pod</code>安全策略（<code>PSP</code>）的<code>beta</code>功能，该功能很快将不被使用，并被称为<code>Pod</code>安全（<code>PSS</code>）的标准所取代。</li>
<li><code>OPA Gatekeeper</code>是<code>Kubernetes</code>的策略控制器。从技术上讲，这是一个可自定义的<code>Kubernetes Admission Webhook</code>，可帮助实施策略和加强治理。</li>
<li>在之前的文章我们展示了如何通过<code>go</code>来开发<code>webhook</code>，而通过<code>Gatekeeper</code>则能轻松实现策略管理，而不用经过复杂的编码。<a id="more"></a>

</li>
</ul>
<h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><ul>
<li><p><code>Gatekeeper</code> 的部署非常简单，去<code>github</code>下载包，之后用<code>kubect</code> 部署，由于之前已经部署，所以我们<code>dry run</code>一下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hy-master01 deploy]# kubectl apply -f gatekeeper.yaml --dry-run</span><br><span class="line">namespace/gatekeeper-system configured (dry run)</span><br><span class="line">resourcequota/gatekeeper-critical-pods configured (dry run)</span><br><span class="line">customresourcedefinition.apiextensions.k8s.io/configs.config.gatekeeper.sh configured (dry run)</span><br><span class="line">customresourcedefinition.apiextensions.k8s.io/constraintpodstatuses.status.gatekeeper.sh configured (dry run)</span><br><span class="line">customresourcedefinition.apiextensions.k8s.io/constrainttemplatepodstatuses.status.gatekeeper.sh configured (dry run)</span><br><span class="line">customresourcedefinition.apiextensions.k8s.io/constrainttemplates.templates.gatekeeper.sh configured (dry run)</span><br><span class="line">serviceaccount/gatekeeper-admin configured (dry run)</span><br><span class="line">podsecuritypolicy.policy/gatekeeper-admin configured (dry run)</span><br><span class="line">role.rbac.authorization.k8s.io/gatekeeper-manager-role configured (dry run)</span><br><span class="line">clusterrole.rbac.authorization.k8s.io/gatekeeper-manager-role configured (dry run)</span><br><span class="line">rolebinding.rbac.authorization.k8s.io/gatekeeper-manager-rolebinding configured (dry run)</span><br><span class="line">clusterrolebinding.rbac.authorization.k8s.io/gatekeeper-manager-rolebinding configured (dry run)</span><br><span class="line">secret/gatekeeper-webhook-server-cert configured (dry run)</span><br><span class="line">service/gatekeeper-webhook-service configured (dry run)</span><br><span class="line">deployment.apps/gatekeeper-audit configured (dry run)</span><br><span class="line">deployment.apps/gatekeeper-controller-manager configured (dry run)</span><br><span class="line">poddisruptionbudget.policy/gatekeeper-controller-manager configured (dry run)</span><br><span class="line">validatingwebhookconfiguration.admissionregistration.k8s.io/gatekeeper-validating-webhook-configuration configured (dry run)</span><br></pre></td></tr></table></figure>
</li>
<li><p>查看一下部署情况：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hy-master01 deploy]# kubectl get pod -n gatekeeper-system</span><br><span class="line">NAME                                             READY   STATUS    RESTARTS   AGE</span><br><span class="line">gatekeeper-audit-86c7579788-5qkk9                1/1     Running   0          40d</span><br><span class="line">gatekeeper-controller-manager-58c66ffc85-cdtnc   1/1     Running   0          40d</span><br><span class="line">gatekeeper-controller-manager-58c66ffc85-crp5p   1/1     Running   0          40d</span><br><span class="line">gatekeeper-controller-manager-58c66ffc85-sds72   1/1     Running   0          40d</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h3 id="用一个策略做一下测试"><a href="#用一个策略做一下测试" class="headerlink" title="用一个策略做一下测试"></a>用一个策略做一下测试</h3><ul>
<li><p>创建一个只允许特定前缀的镜像部署，采用声明式策略语言 <em><code>Rego</code></em>，使用的话要学习一下，官方仓库也维护了一个策略库：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">templates.gatekeeper.sh/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConstraintTemplate</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">imagecheck</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">crd:</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">names:</span></span><br><span class="line">        <span class="attr">kind:</span> <span class="string">imagecheck</span></span><br><span class="line">      <span class="attr">validation:</span></span><br><span class="line">        <span class="attr">openAPIV3Schema:</span></span><br><span class="line">          <span class="attr">properties:</span></span><br><span class="line">            <span class="attr">prefix:</span></span><br><span class="line">              <span class="attr">type:</span> <span class="string">string</span></span><br><span class="line">  <span class="attr">targets:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">target:</span> <span class="string">admission.k8s.gatekeeper.sh</span></span><br><span class="line">      <span class="attr">rego:</span> <span class="string">|</span></span><br><span class="line">        <span class="string">package</span> <span class="string">image</span></span><br><span class="line">        <span class="string">violation[&#123;"msg":</span> <span class="string">msg&#125;]</span> <span class="string">&#123;</span></span><br><span class="line">          <span class="string">containers</span> <span class="string">=</span> <span class="string">input.review.object.spec.template.spec.containers</span></span><br><span class="line">                <span class="string">some</span> <span class="string">i</span></span><br><span class="line">                <span class="string">image</span> <span class="string">:=</span> <span class="string">containers[i].image</span></span><br><span class="line">                <span class="string">not</span> <span class="string">startswith(image,</span> <span class="string">input.parameters.prefix)</span></span><br><span class="line">                <span class="string">msg</span> <span class="string">:=</span> <span class="string">sprintf("Image</span> <span class="string">'%v'</span> <span class="string">is</span> <span class="string">not</span> <span class="string">allowed.",</span> <span class="string">[image])</span></span><br><span class="line">        <span class="string">&#125;</span></span><br><span class="line">        </span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">constraints.gatekeeper.sh/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">imagecheck</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">imagecheck</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">match:</span></span><br><span class="line">    <span class="attr">kinds:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">apiGroups:</span> <span class="string">["apps"]</span></span><br><span class="line">        <span class="attr">kinds:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">"Deployment"</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">"DaemonSet"</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">"StatefulSet"</span></span><br><span class="line">  <span class="attr">parameters:</span></span><br><span class="line">    <span class="attr">prefix:</span> <span class="string">"songjl0818/"</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>测试是否生效,，如下所示，<code>nginx</code>不被允许，以<code>songjl0818</code>仓库作为前缀的镜像则能够创建：</p>
<p><img src="gatekeeper.jpg" alt="gatekeeper"></p>
</li>
</ul>
]]></content>
      <categories>
        <category>工作</category>
        <category>云原生</category>
      </categories>
      <tags>
        <tag>k8s</tag>
        <tag>云原生</tag>
        <tag>rego</tag>
      </tags>
  </entry>
  <entry>
    <title>使用OPA设置kubernetes emptyDir策略</title>
    <url>/2022/02/09/%E4%BD%BF%E7%94%A8OPA%E8%AE%BE%E7%BD%AEkubernetes-emptyDir%E7%AD%96%E7%95%A5/</url>
    <content><![CDATA[<h2 id="使用-OPA-设置-kubernetes-emptyDir-策略"><a href="#使用-OPA-设置-kubernetes-emptyDir-策略" class="headerlink" title="使用 OPA  设置 kubernetes emptyDir 策略"></a>使用 <code>OPA</code>  设置 <code>kubernetes emptyDir</code> 策略</h2><p>前一阵子，集群的一个节点因为日志卷设置为 <code>emptyDir</code> 导致了驱逐，经过排查有一些 <code>pod</code> 的 <code>emptyDir</code> 没有设置容量限制（<code>sizeLimit</code>）。之前的文章里介绍了 <code>kuebernetes</code>的策略控制器 <code>OPA Gatekeeper</code> ，但由于都是使用官方维护的策略库，并没有时间学习<code>rego</code> 的语法，因此我们先开发开发了一个准入控制器(<code>admission webhook</code>)来控制 <code>emptyDir</code> 的设置 。春节后这两天看了一下 <code>rego</code> ，参考官方的策略库做了<code>emptyDir</code> 的相关策略。</p>
<a id="more"></a>

<h3 id="准入控制器"><a href="#准入控制器" class="headerlink" title="准入控制器"></a>准入控制器</h3><ul>
<li><p>准入控制器的逻辑比较简单，就是请求创建和更新资源的时候，如果有 <code>emptyDir</code> 卷则查看是否存在 <code>sizeLimit</code> 字段。</p>
</li>
<li><p>下面给出逻辑代码，开发过程可以参考前面 <code>kubebuilder</code> 的文章；</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Copyright 2022 SRE.XGIT.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> v1</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">"context"</span></span><br><span class="line">    <span class="string">"net/http"</span></span><br><span class="line"></span><br><span class="line">    appsv1 <span class="string">"k8s.io/api/apps/v1"</span></span><br><span class="line">    <span class="string">"sigs.k8s.io/controller-runtime/pkg/client"</span></span><br><span class="line">    <span class="string">"sigs.k8s.io/controller-runtime/pkg/webhook/admission"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// +kubebuilder:webhook:verbs=create;update,path=/mutate-core-v1-pod,validating=false,failurePolicy=fail,groups=core,resources=pods,versions=v1,name=vpod.kb.io</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// PodSideCarMutate mutate Pods</span></span><br><span class="line"><span class="keyword">type</span> LogVolValid <span class="keyword">struct</span> &#123;</span><br><span class="line">    Client  client.Client</span><br><span class="line">    decoder *admission.Decoder</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewLogVolValid</span><span class="params">(c client.Client)</span> <span class="title">admission</span>.<span class="title">Handler</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> &amp;LogVolValid&#123;Client: c&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// PodSideCarMutate admits a pod if a specific annotation exists.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v *LogVolValid)</span> <span class="title">Handle</span><span class="params">(ctx context.Context, req admission.Request)</span> <span class="title">admission</span>.<span class="title">Response</span></span> &#123;</span><br><span class="line">    <span class="comment">// TODO</span></span><br><span class="line">    dep := &amp;appsv1.Deployment&#123;&#125;</span><br><span class="line"></span><br><span class="line">    err := v.decoder.Decode(req, dep)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> admission.Errored(http.StatusBadRequest, err)</span><br><span class="line">    &#125;</span><br><span class="line">    volumesList := dep.Spec.Template.Spec.Volumes</span><br><span class="line">    <span class="keyword">for</span> _, volumes := <span class="keyword">range</span> volumesList &#123;</span><br><span class="line">        <span class="keyword">if</span> volumes.VolumeSource.EmptyDir != <span class="literal">nil</span> &amp;&amp; volumes.VolumeSource.EmptyDir.SizeLimit == <span class="literal">nil</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> admission.Denied(<span class="string">"请设置日志卷的容量限制"</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> admission.Allowed(<span class="string">""</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// PodSideCarMutate implements admission.DecoderInjector.</span></span><br><span class="line"><span class="comment">// A decoder will be automatically injected.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// InjectDecoder injects the decoder.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v *LogVolValid)</span> <span class="title">InjectDecoder</span><span class="params">(d *admission.Decoder)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">    v.decoder = d</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>效果：</p>
<p><img src="1.jpg" alt=""></p>
</li>
</ul>
<h3 id="gatekeeper-策略"><a href="#gatekeeper-策略" class="headerlink" title="gatekeeper 策略"></a><code>gatekeeper</code> 策略</h3><ul>
<li><p><code>gatekeeper</code> 的部署使用就不赘述了，直接上策略代码，这里我们定义里两条策略；</p>
<ul>
<li>判断 <code>emptyDir</code> 是否设置了 <code>sizeLimit</code>字段，如果没有则拒绝创建相关资源。</li>
<li>判断 <code>sizeLimit</code> 的值是否超过了我们规定的最大容量，如果超过则拒绝。</li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> logvolsizelimit</span><br><span class="line"></span><br><span class="line">violation[&#123;<span class="string">"msg"</span>: msg&#125;] &#123;</span><br><span class="line">    vols := input.review.object.spec.template.spec.volumes[_]</span><br><span class="line">    emptydir := vols.emptyDir</span><br><span class="line">    not has_key(emptydir, <span class="string">"sizeLimit"</span>)</span><br><span class="line">    msg := sprintf(<span class="string">"Volume '%v' is not allowed, do not have set sizelimit"</span>, [vols.name])</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">violation[&#123;<span class="string">"msg"</span>: msg&#125;] &#123;</span><br><span class="line">    vols := input.review.object.spec.template.spec.volumes[_]</span><br><span class="line">    emptydir_orig := vols.emptyDir.sizeLimit</span><br><span class="line">    size := canonify_size(emptydir_orig)</span><br><span class="line">    max_size_orig := input.parameters.logvolsize</span><br><span class="line">    max_size := canonify_size(max_size_orig)</span><br><span class="line">    size &gt; max_size</span><br><span class="line">    msg := sprintf(<span class="string">"volume &lt;%v&gt; size limit &lt;%v&gt; is higher than the maximum allowed of &lt;%v&gt;"</span>, [vols.name, emptydir_orig, max_size_orig])</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">has_key(object, key) &#123;</span><br><span class="line">    type_name(object[key])</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">size_multiple(<span class="string">"E"</span>) = <span class="number">1000000000000000000000</span></span><br><span class="line"></span><br><span class="line"># <span class="number">10</span> ** <span class="number">18</span></span><br><span class="line">size_multiple(<span class="string">"P"</span>) = <span class="number">1000000000000000000</span></span><br><span class="line"></span><br><span class="line"># <span class="number">10</span> ** <span class="number">15</span></span><br><span class="line">size_multiple(<span class="string">"T"</span>) = <span class="number">1000000000000000</span></span><br><span class="line"></span><br><span class="line"># <span class="number">10</span> ** <span class="number">12</span></span><br><span class="line">size_multiple(<span class="string">"G"</span>) = <span class="number">1000000000000</span></span><br><span class="line"></span><br><span class="line"># <span class="number">10</span> ** <span class="number">9</span></span><br><span class="line">size_multiple(<span class="string">"M"</span>) = <span class="number">1000000000</span></span><br><span class="line"></span><br><span class="line"># <span class="number">10</span> ** <span class="number">6</span></span><br><span class="line">size_multiple(<span class="string">"k"</span>) = <span class="number">1000000</span></span><br><span class="line"></span><br><span class="line"># <span class="number">10</span> ** <span class="number">3</span></span><br><span class="line">size_multiple(<span class="string">""</span>) = <span class="number">1000</span></span><br><span class="line"></span><br><span class="line"># Kubernetes accepts millibyte precision when it probably shouldn<span class="string">'t.</span></span><br><span class="line"><span class="string"># https://github.com/kubernetes/kubernetes/issues/28741</span></span><br><span class="line"><span class="string"># 10 ** 0</span></span><br><span class="line"><span class="string">size_multiple("m") = 1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 1000 * 2 ** 10</span></span><br><span class="line"><span class="string">size_multiple("Ki") = 1024000</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 1000 * 2 ** 20</span></span><br><span class="line"><span class="string">size_multiple("Mi") = 1048576000</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 1000 * 2 ** 30</span></span><br><span class="line"><span class="string">size_multiple("Gi") = 1073741824000</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 1000 * 2 ** 40</span></span><br><span class="line"><span class="string">size_multiple("Ti") = 1099511627776000</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 1000 * 2 ** 50</span></span><br><span class="line"><span class="string">size_multiple("Pi") = 1125899906842624000</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 1000 * 2 ** 60</span></span><br><span class="line"><span class="string">size_multiple("Ei") = 1152921504606846976000</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">canonify_size(orig) = new &#123;</span></span><br><span class="line"><span class="string">	is_number(orig)</span></span><br><span class="line"><span class="string">	new := orig * 1000</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">get_suffix(size) = suffix &#123;</span></span><br><span class="line"><span class="string">	is_string(size)</span></span><br><span class="line"><span class="string">	count(size) &gt; 0</span></span><br><span class="line"><span class="string">	suffix := substring(size, count(size) - 1, -1)</span></span><br><span class="line"><span class="string">	size_multiple(suffix)</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">get_suffix(size) = suffix &#123;</span></span><br><span class="line"><span class="string">	is_string(size)</span></span><br><span class="line"><span class="string">	count(size) &gt; 1</span></span><br><span class="line"><span class="string">	suffix := substring(size, count(size) - 2, -1)</span></span><br><span class="line"><span class="string">	size_multiple(suffix)</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">get_suffix(size) = suffix &#123;</span></span><br><span class="line"><span class="string">	is_string(size)</span></span><br><span class="line"><span class="string">	count(size) &gt; 1</span></span><br><span class="line"><span class="string">	not size_multiple(substring(size, count(size) - 1, -1))</span></span><br><span class="line"><span class="string">	not size_multiple(substring(size, count(size) - 2, -1))</span></span><br><span class="line"><span class="string">	suffix := ""</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">get_suffix(size) = suffix &#123;</span></span><br><span class="line"><span class="string">	is_string(size)</span></span><br><span class="line"><span class="string">	count(size) == 1</span></span><br><span class="line"><span class="string">	not size_multiple(substring(size, count(size) - 1, -1))</span></span><br><span class="line"><span class="string">	suffix := ""</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">get_suffix(size) = suffix &#123;</span></span><br><span class="line"><span class="string">	is_string(size)</span></span><br><span class="line"><span class="string">	count(size) == 0</span></span><br><span class="line"><span class="string">	suffix := ""</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">canonify_size(orig) = new &#123;</span></span><br><span class="line"><span class="string">	is_number(orig)</span></span><br><span class="line"><span class="string">	new := orig * 1000</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">canonify_size(orig) = new &#123;</span></span><br><span class="line"><span class="string">	not is_number(orig)</span></span><br><span class="line"><span class="string">	suffix := get_suffix(orig)</span></span><br><span class="line"><span class="string">	raw := replace(orig, suffix, "")</span></span><br><span class="line"><span class="string">	re_match("^[0-9]+(\\.[0-9]+)?$", raw)</span></span><br><span class="line"><span class="string">	new := to_number(raw) * size_multiple(suffix)</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>构建测试代码：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> logvolsizelimit</span><br><span class="line"></span><br><span class="line">test_input_no_sizeLimit &#123;</span><br><span class="line">    input := &#123;<span class="string">"review"</span>: review([&#123;<span class="string">"emptyDir"</span>: &#123;&#125;, <span class="string">"name"</span>: <span class="string">"log"</span>&#125;]), <span class="string">"parameters"</span>: &#123;<span class="string">"logvolsize"</span>: <span class="string">"3Gi"</span>&#125;&#125;</span><br><span class="line">    results := violation with input as input</span><br><span class="line">    count(results) == <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">test_input_with_sizeLimit_lowwer &#123;</span><br><span class="line">    input := &#123;<span class="string">"review"</span>: review([vol(<span class="string">"2Gi"</span>)]), <span class="string">"parameters"</span>: &#123;<span class="string">"logvolsize"</span>: <span class="string">"3Gi"</span>&#125;&#125;</span><br><span class="line">    results := violation with input as input</span><br><span class="line">    count(results) == <span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">test_input_with_sizeLimit_higher &#123;</span><br><span class="line">    input := &#123;<span class="string">"review"</span>: review([vol(<span class="string">"5Gi"</span>)]), <span class="string">"parameters"</span>: &#123;<span class="string">"logvolsize"</span>: <span class="string">"3Gi"</span>&#125;&#125;</span><br><span class="line">    results := violation with input as input</span><br><span class="line">    count(results) == <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">review(volumes) = output &#123;</span><br><span class="line">    output = &#123;<span class="string">"object"</span>: &#123;<span class="string">"spec"</span>: &#123;<span class="string">"template"</span>: &#123;<span class="string">"spec"</span>: &#123;<span class="string">"volumes"</span>: volumes&#125;&#125;&#125;&#125;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vol(size) = out &#123;</span><br><span class="line">    out = &#123;</span><br><span class="line">        <span class="string">"emptyDir"</span>: &#123;<span class="string">"sizeLimit"</span>: size&#125;,</span><br><span class="line">        <span class="string">"name"</span>: <span class="string">"log"</span>,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>借助于 <code>vscode</code> 的 <code>opa</code> 插件进行测试，我们可以但看测试结果和测试覆盖率：</p>
<p><img src="3.jpg" alt=""></p>
</li>
<li><p>部署到 <code>k8s</code> 集群：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">templates.gatekeeper.sh/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConstraintTemplate</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">logvolsizelimit</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">crd:</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">names:</span></span><br><span class="line">        <span class="attr">kind:</span> <span class="string">logvolsizelimit</span></span><br><span class="line">      <span class="attr">validation:</span></span><br><span class="line">        <span class="comment"># Schema for the `parameters` field</span></span><br><span class="line">        <span class="attr">openAPIV3Schema:</span></span><br><span class="line">          <span class="attr">type:</span> <span class="string">object</span></span><br><span class="line">          <span class="attr">properties:</span></span><br><span class="line">            <span class="attr">logvolsize:</span></span><br><span class="line">              <span class="attr">description:</span> <span class="string">"The maximum allowed emptyDir size limit on a volume."</span></span><br><span class="line">              <span class="attr">type:</span> <span class="string">string</span></span><br><span class="line">  <span class="attr">targets:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">target:</span> <span class="string">admission.k8s.gatekeeper.sh</span></span><br><span class="line">      <span class="attr">rego:</span> <span class="string">|</span></span><br><span class="line">        <span class="string">"rego 代码略"</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">constraints.gatekeeper.sh/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">logvolsizelimit</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">logvolsizelimit</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">match:</span></span><br><span class="line">    <span class="attr">kinds:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">apiGroups:</span> <span class="string">["apps"]</span></span><br><span class="line">        <span class="attr">kinds:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">"Deployment"</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">"DaemonSet"</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">"StatefulSet"</span></span><br><span class="line">  <span class="attr">parameters:</span></span><br><span class="line">    <span class="attr">logvolsize:</span> <span class="string">3Gi</span></span><br></pre></td></tr></table></figure>

<p><img src="4.jpg" alt=""></p>
</li>
<li><p>可以看到，我们在 <code>ConstraintTemplate</code> 中定义了<code>crd</code>，并设置了资源名称 <code>logvolsizelimit</code> ，同时定义了需要传入的参数 <code>logvolsize</code>；之后我们根据 <code>crd</code> 创建了 <code>logvolsizelimit</code> 资源，主要是定义了匹配的 <code>kubernetes</code> 资源，然后定义参数的具体值，这里表示 <code>emptyDir</code> 的 <code>sizeLimit</code> 不能超过 <code>3Gi</code>；需要注意的是，我们把两种资源写到了一起，创建的时候，第二个资源第一次无法创建，需要再执行一次。</p>
</li>
<li><p>创建<code>deployment</code>验证，如下图所示，策略成功生效：</p>
<p><img src="5.jpg" alt=""></p>
</li>
</ul>
]]></content>
      <categories>
        <category>工作</category>
        <category>运维</category>
      </categories>
      <tags>
        <tag>云原生</tag>
        <tag>opa</tag>
        <tag>kubernetes</tag>
      </tags>
  </entry>
  <entry>
    <title>使用kubebuilder开发kubernetes核心资源的webhook</title>
    <url>/2021/10/19/%E4%BD%BF%E7%94%A8kubebuilder%E5%BC%80%E5%8F%91kubernetes%E6%A0%B8%E5%BF%83%E8%B5%84%E6%BA%90%E7%9A%84webhook/</url>
    <content><![CDATA[<ul>
<li><p><code>kubernetes</code> 的准入控制器的开发，通常情况下要么使用 <code>go</code> 的 <code>net/http</code> 开发<code>http</code> 服务端来实现逻辑，更简单的方法是使用 <code>conntronl-runtime</code> 实现。</p>
</li>
<li><p>我们用 <code>kubebuilder</code> 来开发 <code>k8s operator</code> 的时候，可以生成自定义资源的  <code>webhook</code> ，同时也能方便的生成资源清单。但无论是 <code>kubebuilder</code> 还是 <code>operator-sdk</code> 框架都无法实现 <code>core type</code> 资源的 <code>webhook</code> 。<code>kubebuiler</code> 的官方文档提到了 <code>core type webbook</code> 的开发，但并未具体提供具体的开发指导。</p>
</li>
<li><p>那么如何利用 <code>kubebuiler</code> 来简化核心资源准入控制器的开发？下面就探索了一种方式。</p>
</li>
</ul>
<a id="more"></a>


<h3 id="按照一般CRD开发方式生成代码框架"><a href="#按照一般CRD开发方式生成代码框架" class="headerlink" title="按照一般CRD开发方式生成代码框架"></a>按照一般<code>CRD</code>开发方式生成代码框架</h3><ul>
<li><p>对于 <code>kubebuilder</code> 的使用这里不做赘述；</p>
</li>
<li><p>生成代码框架：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 创建文件夹</span></span><br><span class="line">mkdir pod-sidercar-webhook</span><br><span class="line">go mod init github.com/songjl/podwebhookdemo</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 申城代码框架</span></span><br><span class="line">[root@Docker pod-sidercar-webhook]# kubebuilder init --domain songjl.com --license none --owner "JLSong"</span><br><span class="line">Writing kustomize manifests for you to edit...</span><br><span class="line">Writing scaffold for you to edit...</span><br><span class="line">Get controller runtime:</span><br><span class="line"><span class="meta">$</span><span class="bash"> go get sigs.k8s.io/controller-runtime@v0.8.3</span></span><br><span class="line">Update dependencies:</span><br><span class="line"><span class="meta">$</span><span class="bash"> go mod tidy</span></span><br><span class="line">Next: define a resource with:</span><br><span class="line"><span class="meta">$</span><span class="bash"> kubebuilder create api</span></span><br><span class="line"></span><br><span class="line">[root@Docker pod-sidercar-webhook]# go get sigs.k8s.io/controller-runtime@v0.8.3</span><br><span class="line">[root@Docker pod-sidercar-webhook]# go mod tidy</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 生成api，这里注意，我们要创建的是核心资源的 webhook，所以不需要生成 Resource 和 Controller</span></span><br><span class="line">[root@Docker pod-sidercar-webhook]# kubebuilder create api --group core --version v1 --kind Pod</span><br><span class="line">Create Resource [y/n]</span><br><span class="line">n</span><br><span class="line">Create Controller [y/n]</span><br><span class="line">n</span><br><span class="line">Writing kustomize manifests for you to edit...</span><br><span class="line">Writing scaffold for you to edit...</span><br><span class="line">Update dependencies:</span><br><span class="line"><span class="meta">$</span><span class="bash"> go mod tidy</span></span><br><span class="line"></span><br><span class="line">[root@Docker pod-sidercar-webhook]# go mod tidy</span><br></pre></td></tr></table></figure>
</li>
<li><p>接下来，生成 <code>webhook</code>。</p>
<ul>
<li><p>在 <code>kubernetes</code> 中，有下面三种 <code>webhook</code>：<code>admission webhook</code>， <code>authorization webhook</code> 和 <code>CRD conversion webhook</code>。</p>
</li>
<li><p>在 <code>controller-runtime</code> 库中，支持 <code>admission webhooks</code> 和 <code>CRD conversion webhooks</code>；</p>
</li>
<li><p>而在准入 <code>admission webhooks</code> ，有两个阶段：<code>validate</code> 准入阶段，判断资源是否符合规范；<code>mutate</code> 阶段，会在资源上 打上相应补丁；</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> defaulting 是 mutate 阶段的webhook，programmatic-validation 是 validate 阶段的 webhook，在demo种我们实现 mutate 的 webhook</span></span><br><span class="line">[root@Docker pod-sidercar-webhook]# kubebuilder create webhook --group core --version v1 --kind Pod --defaulting --webhook-version v1</span><br><span class="line">Writing kustomize manifests for you to edit...</span><br><span class="line">Writing scaffold for you to edit...</span><br><span class="line">api/v1/pod_webhook.go</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p>通过以上步骤，我们代码框架就生成了，目录结构如下，下面就是修改和<code>codeding</code> ；</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@Docker pod-sidercar-webhook]# tree -L 2</span><br><span class="line">.</span><br><span class="line">├── api</span><br><span class="line">│   └── v1</span><br><span class="line">├── config</span><br><span class="line">│   ├── certmanager</span><br><span class="line">│   ├── default</span><br><span class="line">│   ├── manager</span><br><span class="line">│   ├── prometheus</span><br><span class="line">│   ├── rbac</span><br><span class="line">│   └── webhook</span><br><span class="line">├── Dockerfile</span><br><span class="line">├── go.mod</span><br><span class="line">├── go.sum</span><br><span class="line">├── hack</span><br><span class="line">│   └── boilerplate.go.txt</span><br><span class="line">├── main.go</span><br><span class="line">├── Makefile</span><br><span class="line">└── PROJECT</span><br></pre></td></tr></table></figure>



</li>
</ul>
<h3 id="修改代码框架"><a href="#修改代码框架" class="headerlink" title="修改代码框架"></a>修改代码框架</h3><ul>
<li><p>由于我们并没有生成控制器和资源，所以相应的资源清单要做一些修改;</p>
<ul>
<li><p>对于  <code>config/default/kustomization.yaml</code> 打开相应的<code>webhook</code> 的开关，删除 <code>crd</code> 资源；</p>
</li>
<li><p>对于 <code>config/default/webhookcainjection_patch.yaml</code> ，删除 <code>validate</code> 部分：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 对于该文件来说，因为在demo中只有 matute webhook，所以要做相应的删除，同样的，如果两种 webhook都有，那么该文件则不需改动</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> This patch add annotation to admission webhook config and</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> the variables $(CERTIFICATE_NAMESPACE) and $(CERTIFICATE_NAME) will be substituted by kustomize.</span></span><br><span class="line">apiVersion: admissionregistration.k8s.io/v1</span><br><span class="line">kind: MutatingWebhookConfiguration</span><br><span class="line">metadata:</span><br><span class="line">  name: mutating-webhook-configuration</span><br><span class="line">  annotations:</span><br><span class="line">    cert-manager.io/inject-ca-from: $(CERTIFICATE_NAMESPACE)/$(CERTIFICATE_NAME)</span><br><span class="line"><span class="meta">#</span><span class="bash"> ---</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> apiVersion: admissionregistration.k8s.io/v1</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> kind: ValidatingWebhookConfiguration</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> metadata:</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   name: validating-webhook-configuration</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   annotations:</span></span><br><span class="line"><span class="meta">#</span><span class="bash">     cert-manager.io/inject-ca-from: $(CERTIFICATE_NAMESPACE)/$(CERTIFICATE_NAME)</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>在 <code>config/rbac/kustomization.yaml</code> 中，删除<code>role</code> ：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">resources:</span><br><span class="line"><span class="meta">#</span><span class="bash"> All RBAC will be applied under this service account <span class="keyword">in</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> the deployment namespace. You may comment out this resource</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="keyword">if</span> your manager will use a service account that exists at</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> runtime. Be sure to update RoleBinding and ClusterRoleBinding</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> subjects <span class="keyword">if</span> changing service account names.</span></span><br><span class="line">- service_account.yaml</span><br><span class="line"><span class="meta">#</span><span class="bash"> - role.yaml</span></span><br><span class="line">- role_binding.yaml</span><br><span class="line">- leader_election_role.yaml</span><br><span class="line">- leader_election_role_binding.yaml</span><br><span class="line"><span class="meta">#</span><span class="bash"> Comment the following 4 lines <span class="keyword">if</span> you want to <span class="built_in">disable</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> the auth proxy (https://github.com/brancz/kube-rbac-proxy)</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">which</span> protects your /metrics endpoint.</span></span><br><span class="line">- auth_proxy_service.yaml</span><br><span class="line">- auth_proxy_role.yaml</span><br><span class="line">- auth_proxy_role_binding.yaml</span><br><span class="line">- auth_proxy_client_clusterrole.yaml</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p>修改完之后，手动生成一下资源清单，做一下测试：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 先生成 manifests</span></span><br><span class="line">make manifests</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 生成完整的资源清单</span></span><br><span class="line">kustomize build config/default/ &gt; pod-sidercar-webhook.yaml</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h3 id="实现代码逻辑"><a href="#实现代码逻辑" class="headerlink" title="实现代码逻辑"></a>实现代码逻辑</h3><ul>
<li><p>修改 <code>main.go</code>  ：</p>
<ul>
<li><p>删除 <code>SetupWebhookWithManager</code> 方法；</p>
</li>
<li><p>注册<code>webhook</code> ：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Copyright 2021 SongJL.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// mgr.GetWebhookServer().Register("/mutate-core-v1-pod", &amp;webhook.Admission&#123;Handler: v1.NewPodSideCarMutate(mgr.GetClient())&#125;)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">"flag"</span></span><br><span class="line">    <span class="string">"os"</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Import all Kubernetes client auth plugins (e.g. Azure, GCP, OIDC, etc.)</span></span><br><span class="line">    <span class="comment">// to ensure that exec-entrypoint and run can make use of them.</span></span><br><span class="line">    <span class="string">"github.com/songjl/podwebhookdemo/api/v1"</span></span><br><span class="line">    <span class="string">"k8s.io/apimachinery/pkg/runtime"</span></span><br><span class="line">    utilruntime <span class="string">"k8s.io/apimachinery/pkg/util/runtime"</span></span><br><span class="line">    clientgoscheme <span class="string">"k8s.io/client-go/kubernetes/scheme"</span></span><br><span class="line">    ctrl <span class="string">"sigs.k8s.io/controller-runtime"</span></span><br><span class="line">    <span class="string">"sigs.k8s.io/controller-runtime/pkg/webhook"</span></span><br><span class="line">    <span class="string">"sigs.k8s.io/controller-runtime/pkg/healthz"</span></span><br><span class="line">    <span class="string">"sigs.k8s.io/controller-runtime/pkg/log/zap"</span></span><br><span class="line">    <span class="comment">//+kubebuilder:scaffold:imports</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">    scheme   = runtime.NewScheme()</span><br><span class="line">    setupLog = ctrl.Log.WithName(<span class="string">"setup"</span>)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123;</span><br><span class="line">    utilruntime.Must(clientgoscheme.AddToScheme(scheme))</span><br><span class="line"></span><br><span class="line">    <span class="comment">//+kubebuilder:scaffold:scheme</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">var</span> metricsAddr <span class="keyword">string</span></span><br><span class="line">    <span class="keyword">var</span> enableLeaderElection <span class="keyword">bool</span></span><br><span class="line">    <span class="keyword">var</span> probeAddr <span class="keyword">string</span></span><br><span class="line">    flag.StringVar(&amp;metricsAddr, <span class="string">"metrics-bind-address"</span>, <span class="string">":8080"</span>, <span class="string">"The address the metric endpoint binds to."</span>)</span><br><span class="line">    flag.StringVar(&amp;probeAddr, <span class="string">"health-probe-bind-address"</span>, <span class="string">":8081"</span>, <span class="string">"The address the probe endpoint binds to."</span>)</span><br><span class="line">    flag.BoolVar(&amp;enableLeaderElection, <span class="string">"leader-elect"</span>, <span class="literal">false</span>,</span><br><span class="line">        <span class="string">"Enable leader election for controller manager. "</span>+</span><br><span class="line">            <span class="string">"Enabling this will ensure there is only one active controller manager."</span>)</span><br><span class="line">    opts := zap.Options&#123;</span><br><span class="line">        Development: <span class="literal">true</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    opts.BindFlags(flag.CommandLine)</span><br><span class="line">    flag.Parse()</span><br><span class="line"></span><br><span class="line">    ctrl.SetLogger(zap.New(zap.UseFlagOptions(&amp;opts)))</span><br><span class="line"></span><br><span class="line">    mgr, err := ctrl.NewManager(ctrl.GetConfigOrDie(), ctrl.Options&#123;</span><br><span class="line">        Scheme:                 scheme,</span><br><span class="line">        MetricsBindAddress:     metricsAddr,</span><br><span class="line">        Port:                   <span class="number">9443</span>,</span><br><span class="line">        HealthProbeBindAddress: probeAddr,</span><br><span class="line">        LeaderElection:         enableLeaderElection,</span><br><span class="line">        LeaderElectionID:       <span class="string">"c4e7e7ef.developer.guy"</span>,</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        setupLog.Error(err, <span class="string">"unable to start manager"</span>)</span><br><span class="line">        os.Exit(<span class="number">1</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    mgr.GetWebhookServer().Register(<span class="string">"/mutate-core-v1-pod"</span>, &amp;webhook.Admission&#123;Handler: v1.NewPodSideCarMutate(mgr.GetClient())&#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//+kubebuilder:scaffold:builder</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> err := mgr.AddHealthzCheck(<span class="string">"healthz"</span>, healthz.Ping); err != <span class="literal">nil</span> &#123;</span><br><span class="line">        setupLog.Error(err, <span class="string">"unable to set up health check"</span>)</span><br><span class="line">        os.Exit(<span class="number">1</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> err := mgr.AddReadyzCheck(<span class="string">"readyz"</span>, healthz.Ping); err != <span class="literal">nil</span> &#123;</span><br><span class="line">        setupLog.Error(err, <span class="string">"unable to set up ready check"</span>)</span><br><span class="line">        os.Exit(<span class="number">1</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    setupLog.Info(<span class="string">"starting manager"</span>)</span><br><span class="line">    <span class="keyword">if</span> err := mgr.Start(ctrl.SetupSignalHandler()); err != <span class="literal">nil</span> &#123;</span><br><span class="line">        setupLog.Error(err, <span class="string">"problem running manager"</span>)</span><br><span class="line">        os.Exit(<span class="number">1</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



</li>
</ul>
</li>
</ul>
<ul>
<li><p>代码逻辑，需要实现 <code>Handler</code> 方法：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Copyright 2021 SongJL.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">package</span> v1</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">"context"</span></span><br><span class="line">    <span class="string">"encoding/json"</span></span><br><span class="line">    <span class="string">"net/http"</span></span><br><span class="line"></span><br><span class="line">    corev1 <span class="string">"k8s.io/api/core/v1"</span></span><br><span class="line">    <span class="string">"sigs.k8s.io/controller-runtime/pkg/client"</span></span><br><span class="line">    <span class="string">"sigs.k8s.io/controller-runtime/pkg/webhook/admission"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// +kubebuilder:webhook:verbs=create;update,path=/mutate-core-v1-pod,validating=false,failurePolicy=fail,groups=core,resources=pods,versions=v1,name=vpod.kb.io</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// PodSideCarMutate mutate Pods</span></span><br><span class="line"><span class="keyword">type</span> PodSidecarMutate <span class="keyword">struct</span> &#123;</span><br><span class="line">    Client  client.Client</span><br><span class="line">    decoder *admission.Decoder</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewPodSideCarMutate</span><span class="params">(c client.Client)</span> <span class="title">admission</span>.<span class="title">Handler</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> &amp;PodSidecarMutate&#123;Client: c&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// PodSideCarMutate admits a pod if a specific annotation exists.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v *PodSidecarMutate)</span> <span class="title">Handle</span><span class="params">(ctx context.Context, req admission.Request)</span> <span class="title">admission</span>.<span class="title">Response</span></span> &#123;</span><br><span class="line">    <span class="comment">// TODO</span></span><br><span class="line"></span><br><span class="line">    pod := &amp;corev1.Pod&#123;&#125;</span><br><span class="line"></span><br><span class="line">    err := v.decoder.Decode(req, pod)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> admission.Errored(http.StatusBadRequest, err)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    sidecar := corev1.Container&#123;</span><br><span class="line">        Name:            <span class="string">"nginx"</span>,</span><br><span class="line">        Image:           <span class="string">"nginx:1.16"</span>,</span><br><span class="line">        ImagePullPolicy: corev1.PullIfNotPresent,</span><br><span class="line">        Ports: []corev1.ContainerPort&#123;</span><br><span class="line">                    &#123;</span><br><span class="line">                        Name: <span class="string">"http"</span>,</span><br><span class="line">                        ContainerPort: <span class="number">80</span>,</span><br><span class="line">                    &#125;,</span><br><span class="line">                &#125;,</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    pod.Spec.Containers = <span class="built_in">append</span>(pod.Spec.Containers, sidecar)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    marshaledPod, err := json.Marshal(pod)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> admission.Errored(http.StatusInternalServerError, err)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> admission.PatchResponseFromRaw(req.Object.Raw, marshaledPod)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// PodSideCarMutate implements admission.DecoderInjector.</span></span><br><span class="line"><span class="comment">// A decoder will be automatically injected.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// InjectDecoder injects the decoder.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v *PodSidecarMutate)</span> <span class="title">InjectDecoder</span><span class="params">(d *admission.Decoder)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">    v.decoder = d</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h3 id="构建镜像并测试"><a href="#构建镜像并测试" class="headerlink" title="构建镜像并测试"></a>构建镜像并测试</h3><ul>
<li><p>构建镜像：</p>
<ul>
<li><p>国内网络原因，因此我们对生成的 <code>Dockerfile</code> 做修改，这是一个多阶段构建的<code>Dockferile</code>:</p>
</li>
<li><p>核心资源无需自定义控制器，我们也没有生成，修改；</p>
</li>
<li><p>网络问题，添加 <code>goproxy</code> ，修改 <code>gcr</code> 仓库的镜像；</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Build the manager binary</span></span><br><span class="line"><span class="keyword">FROM</span> golang:<span class="number">1.16</span> as builder</span><br><span class="line"></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> /workspace</span></span><br><span class="line"><span class="comment"># Copy the Go Modules manifests</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> go.mod go.mod</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> go.sum go.sum</span></span><br><span class="line"><span class="comment"># cache deps before building and copying source so that we don't need to re-download as much</span></span><br><span class="line"><span class="comment"># and so that source changes don't invalidate our downloaded layer</span></span><br><span class="line"><span class="comment"># RUN GOPROXY=https://goproxy.cn &amp;&amp; go mod download</span></span><br><span class="line"><span class="comment"># 修改gopxory</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> go env -w GOPROXY=https://goproxy.cn &amp;&amp;　go mod download</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Copy the go source</span></span><br><span class="line"><span class="comment"># 无需控制器</span></span><br><span class="line"><span class="comment"># COPY controllers/ controllers/</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> main.go main.go</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> api/ api/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Build</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -o manager main.go</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Use distroless as minimal base image to package the manager binary</span></span><br><span class="line"><span class="comment"># Refer to https://github.com/GoogleContainerTools/distroless for more details</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># gcr的镜像国内无法拉取，修改成docker hub上的</span></span><br><span class="line"><span class="keyword">FROM</span> katanomi/distroless-static:nonroot</span><br><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> /</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> --from=builder /workspace/manager .</span></span><br><span class="line"><span class="keyword">USER</span> <span class="number">65532</span>:<span class="number">65532</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>构建并上传到仓库</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker build -t songjl0818/podsidecardemo:v1 .</span><br><span class="line">docker push songjl0818/podsidecardemo:v1</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p>功能验证：</p>
<ul>
<li><p><code>webhook</code> 需要证书，，推荐采用 <code>cert manager</code> 进行管理。<code>cert manager</code>  的使用本篇不做介绍。<code>kubebuilder</code> 生成的资源清单也给我们生成了采用自签证书的相关资源：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">cert-manager.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Certificate</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">pod-sidercar-webhook-serving-cert</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">pod-sidercar-webhook-system</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">dnsNames:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">pod-sidercar-webhook-webhook-service.pod-sidercar-webhook-system.svc</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">pod-sidercar-webhook-webhook-service.pod-sidercar-webhook-system.svc.cluster.local</span></span><br><span class="line">  <span class="attr">issuerRef:</span></span><br><span class="line">    <span class="attr">kind:</span> <span class="string">Issuer</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">pod-sidercar-webhook-selfsigned-issuer</span></span><br><span class="line">  <span class="attr">secretName:</span> <span class="string">webhook-server-cert</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">cert-manager.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Issuer</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">pod-sidercar-webhook-selfsigned-issuer</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">pod-sidercar-webhook-system</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selfSigned:</span> <span class="string">&#123;&#125;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>验证一下证书，我们可以看到证书已经生成好了：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hy-master01 ~]# kubectl get issuer -n pod-sidercar-webhook-system</span><br><span class="line">NAME                                     READY   AGE</span><br><span class="line">pod-sidercar-webhook-selfsigned-issuer   True    35m</span><br><span class="line">[root@hy-master01 ~]# kubectl get certificate -n pod-sidercar-webhook-system</span><br><span class="line">NAME                                READY   SECRET                AGE</span><br><span class="line">pod-sidercar-webhook-serving-cert   True    webhook-server-cert   35m</span><br><span class="line">[root@hy-master01 ~]# kubectl get secrets -n pod-sidercar-webhook-system</span><br><span class="line">NAME                                                  TYPE                                  DATA   AGE</span><br><span class="line">default-token-l74zf                                   kubernetes.io/service-account-token   3      35m</span><br><span class="line">pod-sidercar-webhook-controller-manager-token-rmdzw   kubernetes.io/service-account-token   3      35m</span><br><span class="line">webhook-server-cert                                   kubernetes.io/tls                     3      35m</span><br></pre></td></tr></table></figure>
</li>
<li><p>部署<code>webhook</code> ：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 利用生成的资源清单一键部署</span></span><br><span class="line">kubectl apply -f pod-sidercar-webhook.yaml</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看部署是否成功</span></span><br><span class="line">[root@hy-master01 ~]# kubectl get pod -n pod-sidercar-webhook-system</span><br><span class="line">NAME                                                       READY   STATUS    RESTARTS   AGE</span><br><span class="line">pod-sidercar-webhook-controller-manager-865fcdf647-v6jfq   2/2     Running   0          38m</span><br></pre></td></tr></table></figure>
</li>
<li><p>这是框架自动生成的资源清单，实际部署过程中，我们也可增加 <code>namespaceSelector</code> 字段来控制是否使用这个<code>webhook</code>：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">admissionregistration.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">MutatingWebhookConfiguration</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">cert-manager.io/inject-ca-from:</span> <span class="string">pod-sidercar-webhook-system/pod-sidercar-webhook-serving-cert</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">pod-sidercar-webhook-mutating-webhook-configuration</span></span><br><span class="line"><span class="attr">webhooks:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">admissionReviewVersions:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">v1</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">v1beta1</span></span><br><span class="line">  <span class="attr">clientConfig:</span></span><br><span class="line">    <span class="attr">service:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">pod-sidercar-webhook-webhook-service</span></span><br><span class="line">      <span class="attr">namespace:</span> <span class="string">pod-sidercar-webhook-system</span></span><br><span class="line">      <span class="attr">path:</span> <span class="string">/mutate-core-v1-pod</span></span><br><span class="line">  <span class="attr">failurePolicy:</span> <span class="string">Fail</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">mpod.kb.io</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">""</span></span><br><span class="line">    <span class="attr">apiVersions:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">v1</span></span><br><span class="line">    <span class="attr">operations:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">CREATE</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">UPDATE</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">pods</span></span><br><span class="line">  <span class="attr">sideEffects:</span> <span class="string">None</span></span><br><span class="line">  </span><br><span class="line"> <span class="string">---</span></span><br><span class="line"> <span class="comment"># 这是选择 ns 的字段，根据需要实施</span></span><br><span class="line">  <span class="attr">namespaceSelector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">pod-admission-webhook-injection:</span> <span class="string">enabled</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>功能验证：</p>
<ul>
<li><p>创建一个pod:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat &lt;&lt;EOF &gt; test-webhook.yaml</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: "test-webhook"</span><br><span class="line">  namespace: default</span><br><span class="line">  labels:</span><br><span class="line">    app: "test-webhook"</span><br><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  - name: test-webhook</span><br><span class="line">    image: "centos:7.9.2009"</span><br><span class="line">    command:</span><br><span class="line">      - sleep</span><br><span class="line">      - "3600"</span><br><span class="line">    resources:</span><br><span class="line">      limits:</span><br><span class="line">        cpu: 200m</span><br><span class="line">        memory: 500Mi</span><br><span class="line">      requests:</span><br><span class="line">        cpu: 100m</span><br><span class="line">        memory: 200Mi</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">kubect apply -f test-webhook.yaml</span><br></pre></td></tr></table></figure>
</li>
<li><p>查看这个 <code>pod</code> ，可以看到<code>pod</code> 多了一个容器，说明 <code>sidecar</code> 生效了，在下图中也可以看到，代码中的<code>nginx</code> 容器已经自动添加到<code>pod</code>当中了：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hy-master01 ~]# kubectl get pod</span><br><span class="line">NAME                          READY   STATUS    RESTARTS   AGE</span><br><span class="line">test-webhook                  2/2     Running   0          33m</span><br></pre></td></tr></table></figure>

<p><img src="webhook.jpg" alt="webhook"></p>
</li>
</ul>
</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>工作</category>
        <category>云原生</category>
      </categories>
      <tags>
        <tag>go</tag>
        <tag>kubernetes</tag>
        <tag>devops</tag>
      </tags>
  </entry>
  <entry>
    <title>使用localstack来测试terraform</title>
    <url>/2022/02/23/%E4%BD%BF%E7%94%A8localstack%E6%9D%A5%E6%B5%8B%E8%AF%95terraform/</url>
    <content><![CDATA[<h2 id="使用-localstack-来测试-terraform"><a href="#使用-localstack-来测试-terraform" class="headerlink" title="使用 localstack 来测试 terraform"></a>使用 <code>localstack</code> 来测试 <code>terraform</code></h2><p><code>terraform</code> 作为基础设置即代码的首选工具，为基础设施的自动化提供了极大便利。但是 <code>terraform</code> 资源清单的测试却一直没有好的办法，能 <code>plan</code> 成功不代表能 <code>apply</code> 成功。</p>
<p><code>LocalStack</code> 是开发 <code>JIRA</code> 的公司 <code>Atlassian</code> 开发的, 用 Python “山寨”了 <code>AWS</code> 的 <code>API</code>, 通过 <code>REST API</code>提供跟 <code>AWS</code> 一模一样的服务。</p>
<p>那么意味着我们可用利用 <code>lcoalstack</code> 作为 <code>terraform</code> 编排 <code>aws</code> 的测试工具。</p>
<a id="more"></a>

<h3 id="localstack-部署："><a href="#localstack-部署：" class="headerlink" title="localstack 部署："></a><code>localstack</code> 部署：</h3><ul>
<li><p>采用 <code>docker-compose</code> 进行部署：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">"3.8"</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">localstack:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">"$&#123;LOCALSTACK_DOCKER_NAME-localstack_main&#125;"</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">localstack/localstack</span></span><br><span class="line">    <span class="attr">network_mode:</span> <span class="string">bridge</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"127.0.0.1:4510-4559:4510-4559"</span>  <span class="comment"># external service port range</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"127.0.0.1:4566:4566"</span>            <span class="comment"># LocalStack Edge Proxy</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">SERVICES=$&#123;SERVICES-acm,apigateway</span></span><br><span class="line">          <span class="string">,cloudformation,cloudwatch,dynamodb</span></span><br><span class="line">          <span class="string">,dynamodbstreams,ec2,es,events</span></span><br><span class="line">          <span class="string">,firehose,iam,kinesis,kms,lambda,rds</span></span><br><span class="line">          <span class="string">,route53,s3,s3api,secretsmanager,ses,sns</span></span><br><span class="line">          <span class="string">,sqs,ssm,stepfunctions,sts&#125;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DEBUG=$&#123;DEBUG-1&#125;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DATA_DIR=$&#123;DATA_DIR-/tmp/localstack/data&#125;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">LAMBDA_EXECUTOR=$&#123;LAMBDA_EXECUTOR-docker&#125;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">HOST_TMP_FOLDER=$&#123;TMPDIR:-/tmp/&#125;localstack</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DOCKER_HOST=unix:///var/run/docker.sock</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"$&#123;TMPDIR:-/tmp&#125;/localstack:/tmp/localstack"</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"/var/run/docker.sock:/var/run/docker.sock"</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">        <span class="attr">default:</span></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">    <span class="attr">default:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">localstack-tutorial</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>部署：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@Helm localstack]# docker-compose up -d</span><br><span class="line">[root@Helm localstack]# docker-compose ls</span><br><span class="line">NAME                STATUS</span><br><span class="line">localstack          running(2)</span><br></pre></td></tr></table></figure>
</li>
<li><p>验证：</p>
<p><img src="1.jpg" alt=""></p>
</li>
</ul>
<h3 id="terraform-测试："><a href="#terraform-测试：" class="headerlink" title="terraform 测试："></a><code>terraform</code> 测试：</h3><ul>
<li><p>测试样例：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">terraform &#123;</span><br><span class="line">  required_providers &#123;</span><br><span class="line">    aws = &#123;</span><br><span class="line">          source  = <span class="string">"hashicorp/aws"</span></span><br><span class="line">          version = <span class="string">"= 3.74.3"</span></span><br><span class="line">        &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">provider <span class="string">"aws"</span> &#123;</span><br><span class="line">  region                      = <span class="string">"ap-southeast-2"</span></span><br><span class="line">  access_key                  = <span class="string">"test"</span></span><br><span class="line">  secret_key                  = <span class="string">"test"</span></span><br><span class="line">  skip_credentials_validation = <span class="literal">true</span></span><br><span class="line">  skip_metadata_api_check     = <span class="literal">true</span></span><br><span class="line">  skip_requesting_account_id  = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 4510-4559:4510-4559</span></span><br><span class="line">  endpoints &#123;</span><br><span class="line">    acm            = <span class="string">"http://localhost:4566"</span></span><br><span class="line">    apigateway     = <span class="string">"http://localhost:4566"</span></span><br><span class="line">    cloudformation = <span class="string">"http://localhost:4566"</span></span><br><span class="line">    cloudwatch     = <span class="string">"http://localhost:4566"</span></span><br><span class="line">    dynamodb       = <span class="string">"http://localhost:4566"</span></span><br><span class="line">    ec2            = <span class="string">"http://localhost:4566"</span></span><br><span class="line">    es             = <span class="string">"http://localhost:4566"</span></span><br><span class="line">    firehose       = <span class="string">"http://localhost:4566"</span></span><br><span class="line">    iam            = <span class="string">"http://localhost:4566"</span></span><br><span class="line">    kinesis        = <span class="string">"http://localhost:4566"</span></span><br><span class="line">    lambda         = <span class="string">"http://localhost:4566"</span></span><br><span class="line">    rds            = <span class="string">"http://localhost:4566"</span></span><br><span class="line">    redshift       = <span class="string">"http://localhost:4566"</span></span><br><span class="line">    route53        = <span class="string">"http://localhost:4566"</span></span><br><span class="line">    s3             = <span class="string">"http://localhost:4566"</span></span><br><span class="line">    secretsmanager = <span class="string">"http://localhost:4566"</span></span><br><span class="line">    ses            = <span class="string">"http://localhost:4566"</span></span><br><span class="line">    sns            = <span class="string">"http://localhost:4566"</span></span><br><span class="line">    sqs            = <span class="string">"http://localhost:4566"</span></span><br><span class="line">    ssm            = <span class="string">"http://localhost:4566"</span></span><br><span class="line">    stepfunctions  = <span class="string">"http://localhost:4566"</span></span><br><span class="line">    sts            = <span class="string">"http://localhost:4566"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">resource <span class="string">"aws_instance"</span> <span class="string">"web"</span> &#123;</span><br><span class="line">  ami           = <span class="string">"ami-123456"</span></span><br><span class="line">  instance_type = <span class="string">"t2.micro"</span></span><br><span class="line"></span><br><span class="line">  tags = &#123;</span><br><span class="line">    Name = <span class="string">"XGIT.SJL"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>测试：</p>
<ul>
<li><p><code>terraform init</code></p>
<p><img src="2.jpg" alt=""></p>
</li>
<li><p><code>terraform plan</code></p>
</li>
<li><p><code>terraform apply</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@Helm ec2-demo]# terraform apply --auto-approve</span><br><span class="line"></span><br><span class="line">Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the</span><br><span class="line">following symbols:</span><br><span class="line">  + create</span><br><span class="line"></span><br><span class="line">Terraform will perform the following actions:</span><br><span class="line"></span><br><span class="line"><span class="meta">  #</span><span class="bash"> aws_instance.web will be created</span></span><br><span class="line">  + resource "aws_instance" "web" &#123;</span><br><span class="line">      + ami                                  = "ami-123456"</span><br><span class="line">      + arn                                  = (known after apply)</span><br><span class="line">      + associate_public_ip_address          = (known after apply)</span><br><span class="line">      + availability_zone                    = (known after apply)</span><br><span class="line">      + cpu_core_count                       = (known after apply)</span><br><span class="line">      + cpu_threads_per_core                 = (known after apply)</span><br></pre></td></tr></table></figure>

<p><img src="3.jpg" alt=""></p>
</li>
</ul>
</li>
<li><p>用 <code>aws-cli</code> 查看一下创建的 <code>ec2</code> 实例，如下图所示，虚拟机实例已经存在：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@Helm ec2-demo]# alias aws='docker run --network localstack-tutorial -it -v ~/.aws:/root/.aws -e LOCALSTACK_HOSTNAME=localstack amazon/aws-cli --endpoint-url=http://localstack:4566'</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 在 .aws 下创建配置文件 略</span></span><br></pre></td></tr></table></figure>

<p><img src="4.jpg" alt=""></p>
</li>
</ul>
]]></content>
      <categories>
        <category>工作</category>
        <category>运维</category>
      </categories>
      <tags>
        <tag>云原生</tag>
        <tag>terraform</tag>
        <tag>aws</tag>
      </tags>
  </entry>
  <entry>
    <title>使用packer构建自定义镜像</title>
    <url>/2021/11/05/%E4%BD%BF%E7%94%A8packer%E6%9E%84%E5%BB%BA%E8%87%AA%E5%AE%9A%E4%B9%89%E9%95%9C%E5%83%8F/</url>
    <content><![CDATA[<h2 id="使用packer构建自定义镜像"><a href="#使用packer构建自定义镜像" class="headerlink" title="使用packer构建自定义镜像"></a>使用<code>packer</code>构建自定义镜像</h2><h3 id="虚拟化工具链介绍："><a href="#虚拟化工具链介绍：" class="headerlink" title="虚拟化工具链介绍："></a>虚拟化工具链介绍：</h3><ul>
<li><p><strong><code>KVM</code></strong>：<code>Linux</code> 内核态的虚拟化组件。</p>
</li>
<li><p><strong><code>QEMU</code></strong>：<code>Linux</code> 用户态的虚拟化组件。<code>QEMU</code> 跟 <code>KVM</code> 结合提供完整的虚拟化技术支撑，属于架构的最底层。</p>
</li>
<li><p><strong><code>Libvirt</code></strong>：介于架构底层和架构上层之间，它将底层的虚拟化特性抽象成统一的 <code>API</code>（应用程序编程接口），从而提供给上层调用。</p>
</li>
<li><p><strong><code>Packer</code> 和 <code>Vagrant</code></strong>：虚拟化客户端工具，它们属于架构的最上层，直接跟终端用户交互。同时，在客户端之间也会产生相应联系，我们将 <code>Packer</code> 的输出物作为 <code>Vagrant</code> 的输入源。</p>
</li>
</ul>
<a id="more"></a>

<h3 id="packer"><a href="#packer" class="headerlink" title="packer"></a><code>packer</code></h3><ul>
<li><p>首先是安装<code>packer</code> ，去官网下载二进制文件就可以：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@opsmanager packer-centos7-kvm-example]# packer -v</span><br><span class="line">1.7.4</span><br></pre></td></tr></table></figure>
</li>
<li><p>开启自动完成的功能：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@opsmanager packer-centos7-kvm-example]# packer -autocomplete-install</span><br></pre></td></tr></table></figure>
</li>
<li><p><code>packer</code>流程：</p>
<blockquote>
<p><code>Packer</code>使用作为<code>json</code>文件的模板将配置携带到各种任务中。 核心任务是<code>Build</code> 。 在此阶段，<code>Packer</code>正在使用<code>Builders</code>为单个平台创建机器映像。 例如。 <code>Qemu Builder</code>创建一个<code>kvm / xen</code>虚拟机映像。 下一阶段是配置。 在此任务中， 预配器 （如<code>ansible</code>或<code>shell</code>脚本）在计算机映像内执行任务。 完成后， 后处理器将处理最终任务。 例如压缩虚拟映像或将其导入特定的应用程序。</p>
</blockquote>
</li>
<li><p><code>packer</code>模板：一个 <code>json template file</code> 包含：</p>
<ul>
<li><p><code>builders</code> (必需)</p>
</li>
<li><p><code>description</code> (可选)</p>
</li>
<li><p><code>variables</code> (可选)</p>
</li>
<li><p><code>min_packer_version</code> (可选)</p>
</li>
<li><p><code>provisioners</code> (可选)</p>
</li>
<li><p><code>post-processors</code>(可选)</p>
</li>
</ul>
</li>
</ul>
<h3 id="构建"><a href="#构建" class="headerlink" title="构建"></a>构建</h3><ul>
<li><p>检查环境：</p>
<ul>
<li><p>无论是物理机还是虚拟机开启<code>intel</code>硬件虚拟化支持：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 验证内核模块是否加载</span></span><br><span class="line">[root@opsmanager qume-demo]# lsmod | grep kvm</span><br><span class="line">kvm_intel             188740  0</span><br><span class="line">kvm                   637289  1 kvm_intel</span><br><span class="line">irqbypass              13503  1 kvm</span><br></pre></td></tr></table></figure>
</li>
<li><p>开启嵌套虚拟化加快构建速度：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Y 表示已开启， N 表示未开启，本机已开启</span></span><br><span class="line">[root@opsmanager qume-demo]# cat /sys/module/kvm_intel/parameters/nested</span><br><span class="line">Y</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 开启方法</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 1 创建文件</span></span><br><span class="line">[root@opsmanager qume-demo]# cat /etc/modprobe.d/kvm-nested.conf</span><br><span class="line">options kvm-intel nested=1</span><br><span class="line">options kvm-intel enable_shadow_vmcs=1</span><br><span class="line">options kvm-intel enable_apicv=1</span><br><span class="line">options kvm-intel ept=1</span><br><span class="line"><span class="meta">#</span><span class="bash"> 2 重载内核模块</span></span><br><span class="line">modprobe -r kvm_intel</span><br><span class="line">modprobe -a kvm_intel</span><br></pre></td></tr></table></figure>
</li>
<li><p>安装  <code>qume-kvm</code> ：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 在 epel 源</span></span><br><span class="line">yum install qume-kvm -y</span><br></pre></td></tr></table></figure>
</li>
<li><p>测试脚本：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@opsmanager stardata-install]# cat install.sh</span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">echo "This is a basic example of a shell provisioner."</span><br><span class="line">yum -y install screen vim</span><br></pre></td></tr></table></figure>
</li>
<li><p>创建一个<code>ansible role</code>测试：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">[root@opsmanager packer-centos7-kvm-example]# ansible-galaxy init test</span><br><span class="line">- Role test was created successfully</span><br><span class="line"></span><br><span class="line"># 创建一个测试任务</span><br><span class="line">[root@opsmanager tasks]# cat main.yml</span><br><span class="line">---</span><br><span class="line"># tasks file for test</span><br><span class="line">- name: Add banner strings</span><br><span class="line">  blockinfile:</span><br><span class="line">    path: /etc/motd</span><br><span class="line">    create: yes</span><br><span class="line">    block: |</span><br><span class="line"></span><br><span class="line">      ██████╗  ██████╗ ███╗   ██╗████████╗</span><br><span class="line">      ██╔══██╗██╔═══██╗████╗  ██║╚══██╔══╝</span><br><span class="line">      ██║  ██║██║   ██║██╔██╗ ██║   ██║</span><br><span class="line">      ██║  ██║██║   ██║██║╚██╗██║   ██║</span><br><span class="line">      ██████╔╝╚██████╔╝██║ ╚████║   ██║</span><br><span class="line">      ╚═════╝  ╚═════╝ ╚═╝  ╚═══╝   ╚═╝</span><br><span class="line"></span><br><span class="line">      ██╗   ██╗███████╗███████╗    ██╗████████╗</span><br><span class="line">      ██║   ██║██╔════╝██╔════╝    ██║╚══██╔══╝</span><br><span class="line">      ██║   ██║███████╗█████╗      ██║   ██║</span><br><span class="line">      ██║   ██║╚════██║██╔══╝      ██║   ██║</span><br><span class="line">      ╚██████╔╝███████║███████╗    ██║   ██║</span><br><span class="line">       ╚═════╝ ╚══════╝╚══════╝    ╚═╝   ╚═╝</span><br><span class="line"></span><br><span class="line">      ██╗███╗   ██╗    ██████╗ ██████╗  ██████╗ ██████╗ ██╗</span><br><span class="line">      ██║████╗  ██║    ██╔══██╗██╔══██╗██╔═══██╗██╔══██╗██║</span><br><span class="line">      ██║██╔██╗ ██║    ██████╔╝██████╔╝██║   ██║██║  ██║██║</span><br><span class="line">      ██║██║╚██╗██║    ██╔═══╝ ██╔══██╗██║   ██║██║  ██║╚═╝</span><br><span class="line">      ██║██║ ╚████║    ██║     ██║  ██║╚██████╔╝██████╔╝██╗</span><br><span class="line">      ╚═╝╚═╝  ╚═══╝    ╚═╝     ╚═╝  ╚═╝ ╚═════╝ ╚═════╝ ╚═╝</span><br></pre></td></tr></table></figure>



</li>
</ul>
</li>
</ul>
<ul>
<li><p><code>packer</code> 的模板：</p>
<ul>
<li><p>模板文件：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"variables"</span>: &#123;</span><br><span class="line">        <span class="attr">"ram"</span>: <span class="string">"2048"</span>,</span><br><span class="line">        <span class="attr">"major_version"</span>: <span class="string">"7"</span>,</span><br><span class="line">        <span class="attr">"minor_version"</span>: <span class="string">"9"</span>,</span><br><span class="line">        <span class="attr">"revision_version"</span>: <span class="string">"2009"</span>,</span><br><span class="line">        <span class="attr">"centos_version"</span>: <span class="string">"&#123;&#123;user `major_version`&#125;&#125;.&#123;&#123;user `minor_version`&#125;&#125;"</span>,</span><br><span class="line">        <span class="attr">"name_template"</span>: <span class="string">"centos-&#123;&#123;user `centos_version`&#125;&#125;-amd64"</span>,</span><br><span class="line">        <span class="attr">"disk_size"</span>: <span class="string">"100000"</span>,</span><br><span class="line">        <span class="attr">"vm_name"</span>: <span class="string">"centos7-base"</span>,</span><br><span class="line">        <span class="attr">"iso_url"</span>: <span class="string">"../qume/CentOS-7-x86_64-Minimal-2009.iso"</span>,</span><br><span class="line">        <span class="attr">"iso_checksum"</span>: <span class="string">"07b94e6b1a0b0260b94c83d6bb76b26bf7a310dc78d7a9c7432809fb9bc6194a"</span>,</span><br><span class="line">        <span class="attr">"config_file"</span>: <span class="string">"c7-kvm-ks.cfg"</span>,</span><br><span class="line">        <span class="attr">"playbook_name"</span>: <span class="string">"test.yml"</span>,</span><br><span class="line">        <span class="attr">"ssh_username"</span>: <span class="string">"root"</span>,</span><br><span class="line">        <span class="attr">"ssh_password"</span>: <span class="string">"TestTest"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"builders"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"type"</span>: <span class="string">"qemu"</span>,</span><br><span class="line">            <span class="attr">"accelerator"</span>: <span class="string">"kvm"</span>,</span><br><span class="line">            <span class="attr">"qemu_binary"</span>: <span class="string">"/usr/libexec/qemu-kvm"</span>,</span><br><span class="line">            <span class="attr">"headless"</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">"qemuargs"</span>: [</span><br><span class="line">                [</span><br><span class="line">                    <span class="string">"-m"</span>,</span><br><span class="line">                    <span class="string">"&#123;&#123;user `ram`&#125;&#125;M"</span></span><br><span class="line">                ],</span><br><span class="line">                [</span><br><span class="line">                    <span class="string">"-smp"</span>,</span><br><span class="line">                    <span class="string">"cpus=1,maxcpus=16,cores=4"</span></span><br><span class="line">                ]</span><br><span class="line">            ],</span><br><span class="line">            <span class="attr">"disk_interface"</span>: <span class="string">"virtio"</span>,</span><br><span class="line">            <span class="attr">"disk_size"</span>: <span class="string">"&#123;&#123;user `disk_size`&#125;&#125;"</span>,</span><br><span class="line">            <span class="attr">"format"</span>: <span class="string">"qcow2"</span>,</span><br><span class="line">            <span class="attr">"net_device"</span>: <span class="string">"virtio-net"</span>,</span><br><span class="line">            <span class="attr">"iso_url"</span>: <span class="string">"&#123;&#123;user `iso_url`&#125;&#125;"</span>,</span><br><span class="line">            <span class="attr">"iso_checksum"</span>: <span class="string">"&#123;&#123;user `iso_checksum`&#125;&#125;"</span>,</span><br><span class="line">            <span class="attr">"vm_name"</span>: <span class="string">"&#123;&#123;user `vm_name`&#125;&#125;"</span>,</span><br><span class="line">            <span class="attr">"output_directory"</span>: <span class="string">"builds/packer-&#123;&#123;user `name_template`&#125;&#125;"</span>,</span><br><span class="line">            <span class="attr">"http_directory"</span>: <span class="string">"./docroot"</span>,</span><br><span class="line">            <span class="attr">"http_port_min"</span>: <span class="number">10082</span>,</span><br><span class="line">            <span class="attr">"http_port_max"</span>: <span class="number">10089</span>,</span><br><span class="line">            <span class="attr">"host_port_min"</span>: <span class="number">2222</span>,</span><br><span class="line">            <span class="attr">"host_port_max"</span>: <span class="number">2229</span>,</span><br><span class="line">            <span class="attr">"ssh_username"</span>: <span class="string">"&#123;&#123;user `ssh_username`&#125;&#125;"</span>,</span><br><span class="line">            <span class="attr">"ssh_password"</span>: <span class="string">"&#123;&#123;user `ssh_password`&#125;&#125;"</span>,</span><br><span class="line">            <span class="attr">"ssh_port"</span>: <span class="number">22</span>,</span><br><span class="line">            <span class="attr">"ssh_wait_timeout"</span>: <span class="string">"3600s"</span>,</span><br><span class="line">            <span class="attr">"boot_wait"</span>: <span class="string">"40s"</span>,</span><br><span class="line">            <span class="attr">"boot_command"</span>: [</span><br><span class="line">                <span class="string">"&lt;up&gt;&lt;wait&gt;&lt;tab&gt;&lt;wait&gt; text"</span>,</span><br><span class="line">                <span class="string">"ks=http://&#123;&#123; .HTTPIP &#125;&#125;:&#123;&#123; .HTTPPort &#125;&#125;/&#123;&#123;user `config_file`&#125;&#125;"</span>,</span><br><span class="line">                <span class="string">"&lt;enter&gt;&lt;wait&gt;"</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="attr">"shutdown_command"</span>: <span class="string">"shutdown -P now"</span></span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">"provisioners"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"type"</span>: <span class="string">"shell-local"</span>,</span><br><span class="line">            <span class="attr">"command"</span>: <span class="string">"tar zcf stardata-install.tar.gz stardata-install/"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"type"</span>: <span class="string">"file"</span>,</span><br><span class="line">            <span class="attr">"source"</span>: <span class="string">"stardata-install.tar.gz"</span>,</span><br><span class="line">            <span class="attr">"destination"</span>: <span class="string">"/root/stardata-install.tar.gz"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"type"</span>: <span class="string">"shell"</span>,</span><br><span class="line">            <span class="attr">"pause_before"</span>: <span class="string">"5s"</span>,</span><br><span class="line">            <span class="attr">"inline"</span>: [</span><br><span class="line">                <span class="string">"cd /root/"</span>,</span><br><span class="line">                <span class="string">"tar zxf stardata-install.tar.gz"</span>,</span><br><span class="line">                <span class="string">"cd stardata-install/"</span>,</span><br><span class="line">                <span class="string">"./install.sh"</span>,</span><br><span class="line">                <span class="string">"yum clean all"</span></span><br><span class="line">            ]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"type"</span>: <span class="string">"ansible"</span>,</span><br><span class="line">            <span class="attr">"playbook_file"</span>: <span class="string">"./test/tests/&#123;&#123; user `playbook_name` &#125;&#125;"</span></span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">"post-processors"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"type"</span>: <span class="string">"vagrant"</span>,</span><br><span class="line">            <span class="attr">"keep_input_artifact"</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">"output"</span>: <span class="string">"builds/&#123;&#123;user `name_template`&#125;&#125;-&#123;&#123;.Provider&#125;&#125;.box"</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>说明：</p>
<ol>
<li><code>&quot;headless&quot;: true</code> ，未安装GUI情况下，需要设置；</li>
<li><code>&quot;qemu_binary&quot;: &quot;/usr/libexec/qemu-kvm&quot;</code> ，指定二进制文件目录，默认是旧版本<code>qume-kvm</code>的路径；</li>
<li><code>&quot;ssh_wait_timeout&quot;: &quot;3600s&quot;,</code> <code>ssh</code>超时时间设置大一些；</li>
<li>基础镜像下载到本地，防止网络不稳定；</li>
<li><code>ks</code> 文件可以通过网络远程获取，也可本地起一个<code>http</code>服务，示例中采用了这种方式；</li>
<li>最后生成<code>vagrant</code>的镜像格式；</li>
</ol>
</li>
</ul>
</li>
<li><p><code>kickstart</code> 文件：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@opsmanager docroot]# cat c7-kvm-ks.cfg</span><br><span class="line"><span class="meta">#</span><span class="bash"> reference: https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Installation_Guide/sect-kickstart-syntax.html</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> based on one of our production installs with some modifications</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> and some integrations from https://raw.githubusercontent.com/geerlingguy/packer-centos-7/master/http/ks.cfg</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Run the installer</span></span><br><span class="line">install</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Use CDROM installation media</span></span><br><span class="line">cdrom</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> System language</span></span><br><span class="line">lang en_US.UTF-8</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Keyboard layouts</span></span><br><span class="line">keyboard us</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Enable more hardware support</span></span><br><span class="line">unsupported_hardware</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Network information</span></span><br><span class="line">network --bootproto=dhcp --hostname=centos7-test.stardata.lan</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> System authorization information</span></span><br><span class="line">auth --enableshadow --passalgo=sha512</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Root password</span></span><br><span class="line">rootpw CHANGEME</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Selinux <span class="keyword">in</span> permissive mode (will be disabled by provisioners)</span></span><br><span class="line">selinux --permissive</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> System timezone</span></span><br><span class="line">timezone UTC</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> System bootloader configuration</span></span><br><span class="line">bootloader --append=" crashkernel=auto" --location=mbr --boot-drive=vda</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Run the text install</span></span><br><span class="line">text</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Skip X config</span></span><br><span class="line">skipx</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Only use /dev/vda</span></span><br><span class="line">ignoredisk --only-use=vda</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Overwrite the MBR</span></span><br><span class="line">zerombr</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Partition clearing information</span></span><br><span class="line">clearpart --none --initlabel</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Disk partitioning information</span></span><br><span class="line">part pv.305 --fstype="lvmpv" --ondisk=vda --size=98000</span><br><span class="line">part /boot --fstype="ext4" --ondisk=vda --size=1024 --label=BOOT</span><br><span class="line">volgroup VGsystem --pesize=4096 pv.305</span><br><span class="line">logvol /opt  --fstype="ext4" --size=5120 --name=LVopt --vgname=VGsystem</span><br><span class="line">logvol /usr  --fstype="ext4" --size=10240 --name=LVusr --vgname=VGsystem</span><br><span class="line">logvol /var  --fstype="ext4" --size=10240 --name=LVvar --vgname=VGsystem</span><br><span class="line">logvol swap  --fstype="swap" --size=4096 --name=LVswap --vgname=VGsystem</span><br><span class="line">logvol /  --fstype="ext4" --size=10240 --label="ROOT" --name=LVroot --vgname=VGsystem</span><br><span class="line">logvol /tmp  --fstype="ext4" --size=5120 --name=LVtmp --vgname=VGsystem</span><br><span class="line">logvol /var/log  --fstype="ext4" --size=10240 --name=LVvarlog --vgname=VGsystem</span><br><span class="line">logvol /home  --fstype="ext4" --size=5120 --name=LVhome --vgname=VGsystem</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Do not run the Setup Agent on first boot</span></span><br><span class="line">firstboot --disabled</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Accept the EULA</span></span><br><span class="line">eula --agreed</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> System services</span></span><br><span class="line">services --disabled="chronyd" --enabled="sshd"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Reboot the system when the install is complete</span></span><br><span class="line">reboot</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Packages</span></span><br><span class="line"></span><br><span class="line"><span class="meta">%</span><span class="bash">packages --ignoremissing --excludedocs</span></span><br><span class="line">@^minimal</span><br><span class="line">@core</span><br><span class="line">kexec-tools</span><br><span class="line"><span class="meta">#</span><span class="bash"> unnecessary firmware</span></span><br><span class="line">-aic94xx-firmware</span><br><span class="line">-atmel-firmware</span><br><span class="line">-b43-openfwwf</span><br><span class="line">-bfa-firmware</span><br><span class="line">-ipw2100-firmware</span><br><span class="line">-ipw2200-firmware</span><br><span class="line">-ivtv-firmware</span><br><span class="line">-iwl100-firmware</span><br><span class="line">-iwl1000-firmware</span><br><span class="line">-iwl3945-firmware</span><br><span class="line">-iwl4965-firmware</span><br><span class="line">-iwl5000-firmware</span><br><span class="line">-iwl5150-firmware</span><br><span class="line">-iwl6000-firmware</span><br><span class="line">-iwl6000g2a-firmware</span><br><span class="line">-iwl6050-firmware</span><br><span class="line">-libertas-usb8388-firmware</span><br><span class="line">-ql2100-firmware</span><br><span class="line">-ql2200-firmware</span><br><span class="line">-ql23xx-firmware</span><br><span class="line">-ql2400-firmware</span><br><span class="line">-ql2500-firmware</span><br><span class="line">-rt61pci-firmware</span><br><span class="line">-rt73usb-firmware</span><br><span class="line">-xorg-x11-drv-ati-firmware</span><br><span class="line">-zd1211-firmware</span><br><span class="line"></span><br><span class="line"><span class="meta">%</span><span class="bash">end</span></span><br><span class="line"></span><br><span class="line"><span class="meta">%</span><span class="bash">addon com_redhat_kdump --<span class="built_in">enable</span> --reserve-mb=<span class="string">'auto'</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">%</span><span class="bash">end</span></span><br><span class="line"></span><br><span class="line"><span class="meta">%</span><span class="bash">post</span></span><br><span class="line">yum -y upgrade</span><br><span class="line">yum clean all</span><br><span class="line"><span class="meta">%</span><span class="bash">end</span></span><br></pre></td></tr></table></figure>



</li>
</ul>
<ul>
<li><p>测试脚本：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@opsmanager stardata-install]# cat install.sh</span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">echo "This is a basic example of a shell provisioner."</span><br><span class="line">yum -y install screen vim</span><br></pre></td></tr></table></figure>
</li>
<li><p><code>ansbible</code> 和 <code>ansible-local</code>的区别：</p>
<ul>
<li><code>ansible</code> 需要宿主机安装<code>ansbible</code> ，通过 <code>&quot;communicator&quot;: &quot;ssh&quot;</code> 来进行执行；</li>
<li><code>ansible-local</code> 则是在构建的镜像当中执行，将文件同步到镜像当中后执行，需要提前安装好<code>ansible</code>，不需要<code>ssh</code>，可通过<code>shell</code>先安装；</li>
</ul>
</li>
<li><p>验证模板：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@opsmanager packer-centos7-kvm-example]# packer validate centos7-base.json</span><br></pre></td></tr></table></figure>
</li>
<li><p>构建：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">export</span> PACKER_LOG=1 可以打开debug日志</span></span><br><span class="line">[root@opsmanager qume-demo]# packer build centos7.json</span><br><span class="line">2021/11/01 19:55:24 [INFO] Packer version: 1.7.4 [go1.16.6 linux amd64]</span><br><span class="line">2021/11/01 19:55:24 [TRACE] discovering plugins in /usr/local/bin</span><br><span class="line">2021/11/01 19:55:24 [TRACE] discovering plugins in /root/.packer.d/plugins</span><br><span class="line">2021/11/01 19:55:24 [TRACE] discovering plugins in .</span><br><span class="line">2021/11/01 19:55:24 [INFO] PACKER_CONFIG env var not set; checking the default config file path</span><br><span class="line">2021/11/01 19:55:24 [INFO] PACKER_CONFIG env var set; attempting to open config file: /root/.packerc onfig</span><br><span class="line">...</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h3 id="验证镜像："><a href="#验证镜像：" class="headerlink" title="验证镜像："></a>验证镜像：</h3><ul>
<li><p><code>kvm</code>和<code>libvirt</code> 和<code>vagrant</code>安装使用本篇不做赘述，特别提示<code>vagrant</code>需要安装<code>libvirt-devel</code>；</p>
</li>
<li><p>创建一个<code>存储池</code>：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@opsmanager packer-centos7-kvm-example]# virsh pool-define-as test-packer --type dir --target /root/kvm-image/packer-centos7-kvm-example/images</span><br><span class="line">定义池 test-packer</span><br><span class="line"></span><br><span class="line">[root@opsmanager packer-centos7-kvm-example]# virsh pool-start test-packer</span><br><span class="line">池 test-packer 已启动</span><br><span class="line"></span><br><span class="line">[root@opsmanager packer-centos7-kvm-example]# virsh pool-autostart test-packer</span><br><span class="line">池 test-packer 标记为自动启动</span><br><span class="line"></span><br><span class="line">[root@opsmanager packer-centos7-kvm-example]# virsh pool list --all</span><br><span class="line">错误：未知的命令：'pool'</span><br><span class="line">[root@opsmanager packer-centos7-kvm-example]# virsh pool-list --all</span><br><span class="line"> 名称               状态     自动开始</span><br><span class="line">-------------------------------------------</span><br><span class="line"> default              活动     否</span><br><span class="line"> test-packer          活动     是</span><br></pre></td></tr></table></figure>
</li>
<li><p>将镜像导入<code>vagrant</code> ：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@opsmanager PackerCentos7]# cat metadata.json</span><br><span class="line">&#123;</span><br><span class="line">    "name": "Linux/PackerCentOS7",</span><br><span class="line">    "versions": [&#123;</span><br><span class="line">        "version": "2020.01",</span><br><span class="line">        "providers": [&#123;</span><br><span class="line">            "name": "libvirt",</span><br><span class="line">            "url": "./centos-7.9-amd64-libvirt.box"</span><br><span class="line">        &#125;]</span><br><span class="line">    &#125;]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 由于之前已导入所以报错了，正常会成功</span></span><br><span class="line">[root@opsmanager PackerCentos7]# vagrant box add metadata.json</span><br><span class="line">==&gt; vagrant: A new version of Vagrant is available: 2.2.18 (installed version: 2.2.13)!</span><br><span class="line">==&gt; vagrant: To upgrade visit: https://www.vagrantup.com/downloads.html</span><br><span class="line"></span><br><span class="line">==&gt; box: Loading metadata for box 'metadata.json'</span><br><span class="line">    box: URL: file:///root/vagrantbox/PackerCentos7/metadata.json</span><br><span class="line">==&gt; box: Adding box 'Linux/PackerCentOS7' (v2020.01) for provider: libvirt</span><br><span class="line">The box you're attempting to add already exists. Remove it before</span><br><span class="line">adding it again or add it with the `--force` flag.</span><br><span class="line"></span><br><span class="line">Name: Linux/PackerCentOS7</span><br><span class="line">Provider: libvirt</span><br><span class="line">Version: 2020.01</span><br></pre></td></tr></table></figure>
</li>
<li><p>初始化<code>vagrantfile</code> ，并修改：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@opsmanager testbox]# vagrant init</span><br><span class="line">A `Vagrantfile` has been placed in this directory. You are now</span><br><span class="line">ready to `vagrant up` your first virtual environment! Please read</span><br><span class="line">the comments in the Vagrantfile as well as documentation on</span><br><span class="line">`vagrantup.com` for more information on using Vagrant.</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改 provider 位 libvirt</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改 ssh 账号设置</span></span><br><span class="line">[root@opsmanager testbox]# cat Vagrantfile | grep -v '#'</span><br><span class="line">Vagrant.configure("2") do |config|</span><br><span class="line">  config.vm.box = "Linux/PackerCentOS7"</span><br><span class="line">  config.ssh.insert_key = false</span><br><span class="line">  config.ssh.password = "CHANGEME"</span><br><span class="line">  config.ssh.username = "root"</span><br><span class="line">  config.vm.provider "libvirt" do |libvirt|</span><br><span class="line">    libvirt.storage_pool_name = "test-packer"</span><br><span class="line">  end</span><br><span class="line">end</span><br></pre></td></tr></table></figure>
</li>
<li><p>启动虚机：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@opsmanager testbox]# vagrant up</span><br><span class="line">Bringing machine 'default' up with 'libvirt' provider...</span><br><span class="line">==&gt; default: Checking if box 'Linux/PackerCentOS7' version '2020.01' is up to date...</span><br><span class="line">==&gt; default: Creating image (snapshot of base box volume).</span><br><span class="line">==&gt; default: Creating domain with the following settings...</span><br><span class="line">==&gt; default:  -- Name:              testbox_default</span><br><span class="line">==&gt; default:  -- Description:       Source: /root/testbox/Vagrantfile</span><br><span class="line">==&gt; default:  -- Domain type:       kvm</span><br><span class="line">==&gt; default:  -- Cpus:              1</span><br><span class="line">==&gt; default:  -- Feature:           acpi</span><br><span class="line">==&gt; default:  -- Feature:           apic</span><br><span class="line">==&gt; default:  -- Feature:           pae</span><br><span class="line">==&gt; default:  -- Clock offset:      utc</span><br><span class="line">==&gt; default:  -- Memory:            512M</span><br><span class="line">==&gt; default:  -- Management MAC:</span><br><span class="line">==&gt; default:  -- Loader:</span><br><span class="line">==&gt; default:  -- Nvram:</span><br><span class="line">==&gt; default:  -- Base box:          Linux/PackerCentOS7</span><br><span class="line">==&gt; default:  -- Storage pool:      test-packer</span><br><span class="line">==&gt; default:  -- Image():     /home/packer-centos7-kvm-example/images/testbox_default.img, 98G</span><br><span class="line">==&gt; default:  -- Disk driver opts:  cache='default'</span><br><span class="line">==&gt; default:  -- Kernel:</span><br><span class="line">==&gt; default:  -- Initrd:</span><br><span class="line">==&gt; default:  -- Graphics Type:     vnc</span><br><span class="line">==&gt; default:  -- Graphics Port:     -1</span><br><span class="line">==&gt; default:  -- Graphics IP:       127.0.0.1</span><br><span class="line">==&gt; default:  -- Graphics Password: Not defined</span><br><span class="line">==&gt; default:  -- Video Type:        cirrus</span><br><span class="line">==&gt; default:  -- Video VRAM:        9216</span><br><span class="line">==&gt; default:  -- Sound Type:</span><br><span class="line">==&gt; default:  -- Keymap:            en-us</span><br><span class="line">==&gt; default:  -- TPM Backend:       passthrough</span><br><span class="line">==&gt; default:  -- TPM Path:</span><br><span class="line">==&gt; default:  -- INPUT:             type=mouse, bus=ps2</span><br><span class="line">==&gt; default: Creating shared folders metadata...</span><br><span class="line">==&gt; default: Starting domain.</span><br><span class="line">==&gt; default: Waiting for domain to get an IP address...</span><br><span class="line">==&gt; default: Waiting for machine to boot. This may take a few minutes...</span><br><span class="line">    default: SSH address: 192.168.121.225:22</span><br><span class="line">    default: SSH username: root</span><br><span class="line">    default: SSH auth method: password</span><br><span class="line">==&gt; default: Machine booted and ready!</span><br><span class="line">==&gt; default: Installing NFS client...</span><br><span class="line">==&gt; default: Exporting NFS shared folders...</span><br><span class="line">==&gt; default: Preparing to edit /etc/exports. Administrator privileges will be required...</span><br><span class="line">==&gt; default: Mounting NFS shared folders...</span><br></pre></td></tr></table></figure>
</li>
<li><p>进入虚机查看：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 磁盘分区符合我们定制的 ks 文件</span></span><br><span class="line">[root@opsmanager testbox]# vagrant ssh</span><br><span class="line">==&gt; default: The machine you're attempting to SSH into is configured to use</span><br><span class="line">==&gt; default: password-based authentication. Vagrant can't script entering the</span><br><span class="line">==&gt; default: password for you. If you're prompted for a password, please enter</span><br><span class="line">==&gt; default: the same password you have configured in the Vagrantfile.</span><br><span class="line">root@192.168.121.225's password:</span><br><span class="line">Last login: Thu Nov  4 11:02:37 2021 from gateway</span><br><span class="line">[root@centos7-test ~]# lsblk</span><br><span class="line">NAME                  MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT</span><br><span class="line">vda                   252:0    0   98G  0 disk</span><br><span class="line">├─vda1                252:1    0    1G  0 part /boot</span><br><span class="line">└─vda2                252:2    0 95.7G  0 part</span><br><span class="line">  ├─VGsystem-LVroot   253:0    0   10G  0 lvm  /</span><br><span class="line">  ├─VGsystem-LVswap   253:1    0    4G  0 lvm  [SWAP]</span><br><span class="line">  ├─VGsystem-LVusr    253:2    0   10G  0 lvm  /usr</span><br><span class="line">  ├─VGsystem-LVhome   253:3    0    5G  0 lvm  /home</span><br><span class="line">  ├─VGsystem-LVvarlog 253:4    0   10G  0 lvm  /var/log</span><br><span class="line">  ├─VGsystem-LVtmp    253:5    0    5G  0 lvm  /tmp</span><br><span class="line">  ├─VGsystem-LVvar    253:6    0   10G  0 lvm  /var</span><br><span class="line">  └─VGsystem-LVopt    253:7    0    5G  0 lvm  /opt</span><br><span class="line">  </span><br><span class="line"><span class="meta">#</span><span class="bash"> 验证ansbile</span></span><br><span class="line">[root@centos7-test ~]# cat /etc/motd</span><br><span class="line">██████╗  ██████╗ ███╗   ██╗████████╗</span><br><span class="line">██╔══██╗██╔═══██╗████╗  ██║╚══██╔══╝</span><br><span class="line">██║  ██║██║   ██║██╔██╗ ██║   ██║</span><br><span class="line">██║  ██║██║   ██║██║╚██╗██║   ██║</span><br><span class="line">██████╔╝╚██████╔╝██║ ╚████║   ██║</span><br><span class="line">╚═════╝  ╚═════╝ ╚═╝  ╚═══╝   ╚═╝</span><br><span class="line"></span><br><span class="line">██╗   ██╗███████╗███████╗    ██╗████████╗</span><br><span class="line">██║   ██║██╔════╝██╔════╝    ██║╚══██╔══╝</span><br><span class="line">██║   ██║███████╗█████╗      ██║   ██║</span><br><span class="line">██║   ██║╚════██║██╔══╝      ██║   ██║</span><br><span class="line">╚██████╔╝███████║███████╗    ██║   ██║</span><br><span class="line"> ╚═════╝ ╚══════╝╚══════╝    ╚═╝   ╚═╝</span><br><span class="line"></span><br><span class="line">██╗███╗   ██╗    ██████╗ ██████╗  ██████╗ ██████╗ ██╗</span><br><span class="line">██║████╗  ██║    ██╔══██╗██╔══██╗██╔═══██╗██╔══██╗██║</span><br><span class="line">██║██╔██╗ ██║    ██████╔╝██████╔╝██║   ██║██║  ██║██║</span><br><span class="line">██║██║╚██╗██║    ██╔═══╝ ██╔══██╗██║   ██║██║  ██║╚═╝</span><br><span class="line">██║██║ ╚████║    ██║     ██║  ██║╚██████╔╝██████╔╝██╗</span><br><span class="line">╚═╝╚═╝  ╚═══╝    ╚═╝     ╚═╝  ╚═╝ ╚═════╝ ╚═════╝ ╚═╝</span><br><span class="line"></span><br><span class="line">[root@opsmanager testbox]# vagrant halt</span><br><span class="line">==&gt; default: Attempting graceful shutdown of VM...</span><br></pre></td></tr></table></figure>

<p><img src="packer.jpg" alt="packer"></p>
</li>
</ul>
]]></content>
      <categories>
        <category>工作</category>
        <category>虚拟化</category>
      </categories>
      <tags>
        <tag>kvm</tag>
        <tag>vagrant</tag>
        <tag>packer</tag>
      </tags>
  </entry>
  <entry>
    <title>利用multus-cni和macvlan实现pod多网卡</title>
    <url>/2021/10/21/%E5%88%A9%E7%94%A8multus-cni%E5%92%8Cmacvlan%E5%AE%9E%E7%8E%B0pod%E5%A4%9A%E7%BD%91%E5%8D%A1/</url>
    <content><![CDATA[<h3 id="multus-cni-介绍"><a href="#multus-cni-介绍" class="headerlink" title="multus cni 介绍"></a><code>multus cni</code> 介绍</h3><ul>
<li><p><code>Kubernetes</code> 缺乏支持<code>VNF</code>中多个网络接口的所需功能。传统上，网络功能使用多个网络接口分离控制，管理和控制用户/数据的网络平面。他们还用于支持不同的协议，满足不同的调整和配置要求。</p>
</li>
<li><p>为了解决这个需求，英特尔实现了<code>MULTUS</code>的<code>CNI</code>插件，其中提供了将多个接口添加到<code>Pod</code>的功能。这允许<code>POD</code>通过不同的接口连接到多个网络，并且每个接口都将使用其自己的<code>CNI</code>插件。</p>
</li>
<li><p>有了<code>MULTUS</code>我们可以实现<code>kubernetes</code>高性能网络，例如<code>sr-iov dpdk</code>的方案。但这需要硬件网卡的支持。我们用<code>multus</code>和<code>macvlan</code>的方案实现<code>pod</code>多网卡的功能；</p>
</li>
<li><p><code>macvlan</code>是<code>linux</code>内核实现的功能，实现通用<code>pod</code>多网卡解决方案。</p>
</li>
</ul>
<a id="more"></a>

<h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><h4 id="部署multus"><a href="#部署multus" class="headerlink" title="部署multus"></a>部署<code>multus</code></h4><ul>
<li><p><code>multus</code>的部署很简单，直接资源清单加载；</p>
</li>
<li><p>查看部署情况，<code>multus</code>已经加载，<code>multus</code>的<code>daemonset</code>做了以下事：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hy-node01 bin]# ls</span><br><span class="line">bridge  calico-ipam  flannel      host-local  loopback  multus   ptp     tuning</span><br><span class="line">calico  dhcp         host-device  ipvlan      macvlan   portmap  sample  vlan</span><br><span class="line">[root@hy-node01 bin]# pwd</span><br><span class="line">/opt/cni/bin</span><br></pre></td></tr></table></figure>
</li>
<li><p>启动<code>Multus</code>守护程序集，每个节点上运行一个<code>pod</code>，从而在<code>/opt/cni/bin</code>中的每个节点上放置一个<code>Multus</code>二进制文件</p>
</li>
<li><p>按照字母顺序读取<code>/etc/cni/net.d</code>中的第一个配置文件，并为<code>Multus</code>创建一个新的配置文件，即<code>/etc/cni/net.d/00-multus.conf</code>，此配置是自动生成并基于默认网络配置（假定是按字母顺序排列的第一个配置）</p>
</li>
<li><p>在每个节点上创建一个<code>/etc/cni/net.d/multus.d</code>目录，其中包含用于<code>Multus</code>访问<code>Kubernetes API</code>的身份验证信息。</p>
</li>
</ul>
<h4 id="内核开启macvlan"><a href="#内核开启macvlan" class="headerlink" title="内核开启macvlan"></a>内核开启<code>macvlan</code></h4><ul>
<li><p><code>macvlan</code>需要内核模块支持：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看内核受否加载了 macvlan 模块</span></span><br><span class="line">lsmod | grep macvlan </span><br><span class="line"><span class="meta">#</span><span class="bash"> 加载 macvlan</span></span><br><span class="line">modprobe macvlan</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h3 id="创建NAD"><a href="#创建NAD" class="headerlink" title="创建NAD"></a>创建<code>NAD</code></h3><ul>
<li><p>创建<code>Network Attach-Definition</code> 指定为 <code>macvlan</code> ，注意<code>cniVersion</code>需要和<code>multus</code>版本一致，<code>master</code>则需要要宿主机存在该网卡：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">"k8s.cni.cncf.io/v1"</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">NetworkAttachmentDefinition</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">macvlan-conf-1</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">config:</span> <span class="string">'&#123;</span></span><br><span class="line"><span class="string">      "cniVersion": "0.3.1",</span></span><br><span class="line"><span class="string">      "name": "macvlan-conf-1",</span></span><br><span class="line"><span class="string">      "type": "macvlan",</span></span><br><span class="line"><span class="string">      "master": "eth1",</span></span><br><span class="line"><span class="string">      "mode": "bridge",</span></span><br><span class="line"><span class="string">      "ipam": &#123;</span></span><br><span class="line"><span class="string">        "type": "whereabouts",</span></span><br><span class="line"><span class="string">        "range": "192.168.60.0/24",</span></span><br><span class="line"><span class="string">        "range_start": "192.168.60.20",</span></span><br><span class="line"><span class="string">        "range_end": "192.168.60.50",</span></span><br><span class="line"><span class="string">        "gateway": "192.168.60.1"</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string">    &#125;'</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>我们的<code>ipam</code>使用<code>whereabouts</code>：</p>
<ul>
<li><code>whereabouts</code>是分配 <code>IP</code> 地址的 <code>IP</code> 地址管理 （<code>IPAM</code>） <code>CNI</code> 插件，可在集群范围内分配 <code>IP</code> 地址。用以代替<code>host-local</code>;</li>
<li>下面创建一个<code>pod</code>来验证一下，通过注解<code>annotations</code>来引入一个<code>NAD</code>，当然也可以指定多个<code>NAD</code>插入多张网卡：</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">"test-webhook"</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">k8s.v1.cni.cncf.io/networks:</span> <span class="string">macvlan-conf-1@eth1</span> </span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">"test-webhook"</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">test-webhook</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">"centos:7.9.2009"</span></span><br><span class="line">    <span class="attr">command:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">sleep</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"3600"</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="attr">limits:</span></span><br><span class="line">        <span class="attr">cpu:</span> <span class="string">200m</span></span><br><span class="line">        <span class="attr">memory:</span> <span class="string">500Mi</span></span><br><span class="line">      <span class="attr">requests:</span></span><br><span class="line">        <span class="attr">cpu:</span> <span class="string">100m</span></span><br><span class="line">        <span class="attr">memory:</span> <span class="string">200Mi</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>创建<code>pod</code>，查看网络，我们看到了<code>pod</code>里的<code>eth1</code>，网段也是我们通过<code>whereabouts</code>定义的，如下图所示：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hy-master01 testcm]# kubectl exec -it test-webhook bash</span><br><span class="line">kubectl exec [POD] [COMMAND] is DEPRECATED and will be removed in a future version. Use kubectl exec [POD] -- [COMMAND] instead.</span><br><span class="line">[root@test-webhook /]# ifconfig</span><br><span class="line">eth0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1440</span><br><span class="line">        inet 10.250.225.223  netmask 255.255.255.255  broadcast 0.0.0.0</span><br><span class="line">        ether ce:6b:87:2e:a6:12  txqueuelen 0  (Ethernet)</span><br><span class="line">        RX packets 6805  bytes 19885419 (18.9 MiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 5472  bytes 373961 (365.1 KiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">eth1: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 192.168.60.20  netmask 255.255.255.0  broadcast 0.0.0.0</span><br><span class="line">        ether b2:6b:b9:16:2f:cb  txqueuelen 0  (Ethernet)</span><br><span class="line">        RX packets 146  bytes 8760 (8.5 KiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 1  bytes 42 (42.0 B)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536</span><br><span class="line">        inet 127.0.0.1  netmask 255.0.0.0</span><br><span class="line">        loop  txqueuelen 1000  (Local Loopback)</span><br><span class="line">        RX packets 0  bytes 0 (0.0 B)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 0  bytes 0 (0.0 B)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br></pre></td></tr></table></figure>

<p><img src="multus.jpg" alt="multus"></p>
</li>
<li><p>上面就是<code>multus</code>的简单演示，硬件允许，我们可以通过<code>sr-iov</code> ，<code>dpdk</code>实现<code>k8s</code>高性能网络。</p>
</li>
</ul>
]]></content>
      <categories>
        <category>工作</category>
        <category>云原生</category>
      </categories>
      <tags>
        <tag>k8s</tag>
        <tag>cni</tag>
        <tag>网络</tag>
      </tags>
  </entry>
  <entry>
    <title>将APISERVER和LDAP集成来控制kubernetes集群的权限</title>
    <url>/2022/03/27/%E5%B0%86APISERVER%E5%92%8CLDAP%E9%9B%86%E6%88%90%E6%9D%A5%E6%8E%A7%E5%88%B6kubernetes%E9%9B%86%E7%BE%A4%E7%9A%84%E6%9D%83%E9%99%90/</url>
    <content><![CDATA[<h2 id="APISERVER-和-LDAP-集成进行权限控制"><a href="#APISERVER-和-LDAP-集成进行权限控制" class="headerlink" title="APISERVER 和 LDAP 集成进行权限控制"></a><code>APISERVER</code> 和 <code>LDAP</code> 集成进行权限控制</h2><p>在 <code>Kubernetes</code> 中，<code>APIServer</code>是整个集群的中枢神经，它不仅连接了各个模块，更是为整个集群提供了访问控制能力。为了方便进行用户的统一管理和鉴权，<code>Kubernetes</code> 的  <code>SSO</code> 单点登录，企业推荐的认证集成方式是通过 <code>OIDC</code>对接企业已有的统一身份认证系统。但是企业的认证系统可能并不支持 <code>OIDC</code> 认证协议，企业大多数认证系统都是基于 <code>LDAP</code>协议的，那么就需要我们开发相应的 <code>Webhook</code>。</p>
<a id="more"></a>

<p>但 <code>CoreOS</code> 开源的身份认证服务项目 <code>Dex</code>很好地解决了这个问题。<code>Dex</code>是一种身份服务，它使用 <code>OIDC</code> 来驱动其他应用程序的身份验证。<code>Dex</code>通过“connectors.”充当其他身份提供商的门户。这使得 <code>dex</code> 可以将身份验证延迟(找不到很好的词来形容，只能硬翻了)到 <code>LDAP</code> 服务器、<code>SAML</code> 提供程序或已建立的身份提供程序（如<code>GitHub</code>，<code>Google</code>和<code>Active Directory</code>）。下面列出了支持的验证方式，包括 <code>LDAP</code> , <code>Gitlab</code> 等等。</p>
<p><img src="2.jpg" alt=""></p>
<h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><ul>
<li>下面图展示了基于 <code>github</code> 的认证流程，我们这里会集成 <code>OpenLDAP</code>来替换 <code>Github</code>。同时会用 <code>dex-k8s-authenticator</code> 来作为交互的 <code>web</code>。当然 <code>web</code> 的选择很多，比如 <code>kubelogin</code>, <code>loginapp</code> 等等，大同小异。</li>
<li><code>dex-k8s-authenticator</code> 是一个 <code>web-app</code>，它可以与 <code>Dex</code> 进行交互并获取 <code>Dex</code> 生成的 <code>token</code> 创建和修改 <code>kubeconfig</code> 文件的命令。用户执行这些生成的命令后可以完成 <code>kubeconfig</code> 文件配置。</li>
</ul>
<p><img src="1.png" alt=""></p>
<h4 id="部署-OpenLDAP"><a href="#部署-OpenLDAP" class="headerlink" title="部署 OpenLDAP"></a>部署 <code>OpenLDAP</code></h4><ul>
<li><p>我们将 <code>OpenLDAP</code> 部署在 <code>k8s</code> 当中，用 <code>phpLDAPAdmin</code> 来作为管理的界面，仅为了展示，并未采用 <code>SSL</code>，生产当中建议使用 <code>SSL</code>。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment">## ldap deploy</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ldap-server</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">dex</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">ldap-server</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">kubesphere.io/alias-name:</span> <span class="string">LDAP</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">ldap-server</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">ldap-server</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">volume-conf</span></span><br><span class="line">          <span class="attr">persistentVolumeClaim:</span></span><br><span class="line">            <span class="attr">claimName:</span> <span class="string">ldap-config-pvc</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">volume-data</span></span><br><span class="line">          <span class="attr">persistentVolumeClaim:</span></span><br><span class="line">            <span class="attr">claimName:</span> <span class="string">ldap-data-pvc</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">openldap</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">osixia/openldap:1.5.0</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">tcp-389</span></span><br><span class="line">              <span class="attr">containerPort:</span> <span class="number">389</span></span><br><span class="line">              <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">tcp-636</span></span><br><span class="line">              <span class="attr">containerPort:</span> <span class="number">636</span></span><br><span class="line">              <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">          <span class="attr">env:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">LDAP_ORGANISATION</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">xgit</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">LDAP_DOMAIN</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">xgit.cn</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">LDAP_ADMIN_PASSWORD</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">"123456"</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">LDAP_CONFIG_PASSWORD</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">"123456"</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">LDAP_BACKEND</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">mdb</span></span><br><span class="line">          <span class="attr">resources:</span></span><br><span class="line">            <span class="attr">limits:</span></span><br><span class="line">              <span class="attr">cpu:</span> <span class="string">500m</span></span><br><span class="line">              <span class="attr">memory:</span> <span class="string">500Mi</span></span><br><span class="line">            <span class="attr">requests:</span></span><br><span class="line">              <span class="attr">cpu:</span> <span class="string">100m</span></span><br><span class="line">              <span class="attr">memory:</span> <span class="string">100Mi</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">volume-conf</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/etc/ldap/slapd.d</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">volume-data</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/var/lib/ldap</span></span><br><span class="line">          <span class="attr">terminationMessagePath:</span> <span class="string">/dev/termination-log</span></span><br><span class="line">          <span class="attr">terminationMessagePolicy:</span> <span class="string">File</span></span><br><span class="line">          <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">      <span class="attr">restartPolicy:</span> <span class="string">Always</span></span><br><span class="line">      <span class="attr">terminationGracePeriodSeconds:</span> <span class="number">30</span></span><br><span class="line">      <span class="attr">dnsPolicy:</span> <span class="string">ClusterFirst</span></span><br><span class="line">      <span class="attr">schedulerName:</span> <span class="string">default-scheduler</span></span><br><span class="line">  <span class="attr">strategy:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">RollingUpdate</span></span><br><span class="line">    <span class="attr">rollingUpdate:</span></span><br><span class="line">      <span class="attr">maxUnavailable:</span> <span class="number">25</span><span class="string">%</span></span><br><span class="line">      <span class="attr">maxSurge:</span> <span class="number">25</span><span class="string">%</span></span><br><span class="line">  <span class="attr">revisionHistoryLimit:</span> <span class="number">10</span></span><br><span class="line">  <span class="attr">progressDeadlineSeconds:</span> <span class="number">600</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment">## ldap tool</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ldap-phpldapadmin</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">dex</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">ldap-phpldapadmin</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">kubesphere.io/alias-name:</span> <span class="string">LDAP</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">ldap-phpldapadmin</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">ldap-phpldapadmin</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">ldapadmin</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">osixia/phpldapadmin:stable</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">tcp-443</span></span><br><span class="line">              <span class="attr">containerPort:</span> <span class="number">443</span></span><br><span class="line">              <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">tcp-80</span></span><br><span class="line">              <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line">              <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">          <span class="attr">env:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">PHPLDAPADMIN_HTTPS</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">'false'</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">PHPLDAPADMIN_LDAP_HOSTS</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">ldap-server-svc</span></span><br><span class="line">          <span class="attr">resources:</span></span><br><span class="line">            <span class="attr">limits:</span></span><br><span class="line">              <span class="attr">cpu:</span> <span class="string">500m</span></span><br><span class="line">              <span class="attr">memory:</span> <span class="string">500Mi</span></span><br><span class="line">            <span class="attr">requests:</span></span><br><span class="line">              <span class="attr">cpu:</span> <span class="string">10m</span></span><br><span class="line">              <span class="attr">memory:</span> <span class="string">10Mi</span></span><br><span class="line">          <span class="attr">terminationMessagePath:</span> <span class="string">/dev/termination-log</span></span><br><span class="line">          <span class="attr">terminationMessagePolicy:</span> <span class="string">File</span></span><br><span class="line">          <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">          <span class="attr">securityContext:</span></span><br><span class="line">            <span class="attr">privileged:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">restartPolicy:</span> <span class="string">Always</span></span><br><span class="line">      <span class="attr">terminationGracePeriodSeconds:</span> <span class="number">30</span></span><br><span class="line">      <span class="attr">dnsPolicy:</span> <span class="string">ClusterFirst</span></span><br><span class="line">      <span class="attr">securityContext:</span> <span class="string">&#123;&#125;</span></span><br><span class="line">      <span class="attr">affinity:</span> <span class="string">&#123;&#125;</span></span><br><span class="line">      <span class="attr">schedulerName:</span> <span class="string">default-scheduler</span></span><br><span class="line">  <span class="attr">strategy:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">RollingUpdate</span></span><br><span class="line">    <span class="attr">rollingUpdate:</span></span><br><span class="line">      <span class="attr">maxUnavailable:</span> <span class="number">25</span><span class="string">%</span></span><br><span class="line">      <span class="attr">maxSurge:</span> <span class="number">25</span><span class="string">%</span></span><br><span class="line">  <span class="attr">revisionHistoryLimit:</span> <span class="number">10</span></span><br><span class="line">  <span class="attr">progressDeadlineSeconds:</span> <span class="number">600</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment">## svc</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ldap-server-svc</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">dex</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">ldap-server-svc</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">tcp-ladp</span></span><br><span class="line">      <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">389</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">389</span></span><br><span class="line">      <span class="attr">nodePort:</span> <span class="number">30944</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">tcp-ldap-ssl</span></span><br><span class="line">      <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">636</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">636</span></span><br><span class="line">      <span class="attr">nodePort:</span> <span class="number">31282</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">ldap-server</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">NodePort</span></span><br><span class="line">  <span class="attr">sessionAffinity:</span> <span class="string">ClientIP</span></span><br><span class="line">  <span class="attr">externalTrafficPolicy:</span> <span class="string">Cluster</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment">## svc</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ldap-phpldapadmin-svc</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">dex</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">ldap-phpldapadmin-svc</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">tcp-ldapadmin</span></span><br><span class="line">      <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">80</span></span><br><span class="line">      <span class="attr">nodePort:</span> <span class="number">30581</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">ldap-phpldapadmin</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">NodePort</span></span><br><span class="line">  <span class="attr">sessionAffinity:</span> <span class="string">ClientIP</span></span><br><span class="line">  <span class="attr">externalTrafficPolicy:</span> <span class="string">Cluster</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment">## pvc</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolumeClaim</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ldap-data-pvc</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">dex</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">ldap-data-pvc</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">accessModes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">ReadWriteOnce</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">    <span class="attr">requests:</span></span><br><span class="line">      <span class="attr">storage:</span> <span class="string">2Gi</span></span><br><span class="line">  <span class="attr">storageClassName:</span> <span class="string">prometheus</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment">## pvc</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolumeClaim</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ldap-config-pvc</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">dex</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">ldap-config-pvc</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">accessModes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">ReadWriteOnce</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">    <span class="attr">requests:</span></span><br><span class="line">      <span class="attr">storage:</span> <span class="string">1Gi</span></span><br><span class="line">  <span class="attr">storageClassName:</span> <span class="string">prometheus</span></span><br></pre></td></tr></table></figure>



</li>
</ul>
<ul>
<li><p>部署完成之后导入用户组和用户：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> LDIF Export <span class="keyword">for</span> dc=xgit,dc=cn</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Server: ldap-server-svc (ldap-server-svc)</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Search Scope: sub</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Search Filter: (objectClass=*)</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Total Entries: 7</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Generated by phpLDAPadmin (http://phpldapadmin.sourceforge.net) on March 26, 2022 7:09 am</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Version: 1.2.5</span></span><br><span class="line"></span><br><span class="line">version: 1</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Entry 1: dc=xgit,dc=cn</span></span><br><span class="line">dn: dc=xgit,dc=cn</span><br><span class="line">dc: xgit</span><br><span class="line">o: xgit</span><br><span class="line">objectclass: top</span><br><span class="line">objectclass: dcObject</span><br><span class="line">objectclass: organization</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Entry 2: ou=Groups,dc=xgit,dc=cn</span></span><br><span class="line">dn: ou=Groups,dc=xgit,dc=cn</span><br><span class="line">objectclass: organizationalUnit</span><br><span class="line">objectclass: top</span><br><span class="line">ou: Groups</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Entry 3: cn=admins,ou=Groups,dc=xgit,dc=cn</span></span><br><span class="line">dn: cn=admins,ou=Groups,dc=xgit,dc=cn</span><br><span class="line">cn: admins</span><br><span class="line">member: cn=john,ou=People,dc=xgit,dc=cn</span><br><span class="line">member: cn=jane,ou=People,dc=xgit,dc=cn</span><br><span class="line">objectclass: groupOfNames</span><br><span class="line">objectclass: top</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Entry 4: cn=developers,ou=Groups,dc=xgit,dc=cn</span></span><br><span class="line">dn: cn=developers,ou=Groups,dc=xgit,dc=cn</span><br><span class="line">cn: developers</span><br><span class="line">member: cn=jane,ou=People,dc=xgit,dc=cn</span><br><span class="line">objectclass: groupOfNames</span><br><span class="line">objectclass: top</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Entry 5: ou=People,dc=xgit,dc=cn</span></span><br><span class="line">dn: ou=People,dc=xgit,dc=cn</span><br><span class="line">objectclass: organizationalUnit</span><br><span class="line">objectclass: top</span><br><span class="line">ou: People</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Entry 6: cn=jane,ou=People,dc=xgit,dc=cn</span></span><br><span class="line">dn: cn=jane,ou=People,dc=xgit,dc=cn</span><br><span class="line">cn: jane</span><br><span class="line">mail: janedoe@example.com</span><br><span class="line">objectclass: person</span><br><span class="line">objectclass: inetOrgPerson</span><br><span class="line">objectclass: top</span><br><span class="line">sn: doe</span><br><span class="line">userpassword: foo</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Entry 7: cn=john,ou=People,dc=xgit,dc=cn</span></span><br><span class="line">dn: cn=john,ou=People,dc=xgit,dc=cn</span><br><span class="line">cn: john</span><br><span class="line">mail: johndoe@example.com</span><br><span class="line">objectclass: person</span><br><span class="line">objectclass: inetOrgPerson</span><br><span class="line">objectclass: top</span><br><span class="line">sn: doe</span><br><span class="line">userpassword: bar</span><br></pre></td></tr></table></figure>
</li>
<li><p>最终会有两个组和两个用户：</p>
<p><img src="3.jpg" alt=""></p>
</li>
</ul>
<h4 id="部署dex"><a href="#部署dex" class="headerlink" title="部署dex"></a>部署<code>dex</code></h4><ul>
<li><p><code>dex</code> 的部署参考官方仓库的 <code>helm</code> 包或者示例部署文件，本文仅为演示，我们利用自带的脚本生成一个自签证书。注意 <code>alt_names</code>，我们添加了一个最终访问的 <code>IP</code> 地址。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">mkdir -p ssl</span><br><span class="line"></span><br><span class="line">cat &lt;&lt; EOF &gt; ssl/req.cnf</span><br><span class="line">[req]</span><br><span class="line">req_extensions = v3_req</span><br><span class="line">distinguished_name = req_distinguished_name</span><br><span class="line">[req_distinguished_name]</span><br><span class="line">[ v3_req ]</span><br><span class="line">basicConstraints = CA:FALSE</span><br><span class="line">keyUsage = nonRepudiation, digitalSignature, keyEncipherment</span><br><span class="line">subjectAltName = @alt_names</span><br><span class="line">[alt_names]</span><br><span class="line">DNS.1 = dex.example.com</span><br><span class="line">IP.1 = 10.90.15.158</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">openssl genrsa -out ssl/ca-key.pem 2048</span><br><span class="line">openssl req -x509 -new -nodes -key ssl/ca-key.pem -days 10 -out ssl/ca.pem -subj "/CN=kube-ca"</span><br><span class="line"></span><br><span class="line">openssl genrsa -out ssl/key.pem 2048</span><br><span class="line">openssl req -new -key ssl/key.pem -out ssl/csr.pem -subj "/CN=kube-ca" -config ssl/req.cnf</span><br><span class="line">openssl x509 -req -in ssl/csr.pem -CA ssl/ca.pem -CAkey ssl/ca-key.pem -CAcreateserial -out ssl/cert.pem -days 10 -extensions v3_req -extfile ssl/req.cnf</span><br></pre></td></tr></table></figure>
</li>
<li><p>后续按部就班的部署，由于是自签证书，我们需要将 <code>ca</code>证书和自签生成的证书密钥导入到<code>pod</code>当中。下面是配置文件，需要注意几点。</p>
<ul>
<li><p>指定证书的目录。</p>
</li>
<li><p><code>LDAP</code> 的信息。</p>
</li>
<li><p><code>staticClients</code> 中的信息是我们后续部署是 <code>dex-k8s-authenticator</code> 的相关信息。</p>
</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">dex</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">dex</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">config.yaml:</span> <span class="string">|</span></span><br><span class="line">    <span class="attr">issuer:</span> <span class="string">https://xxxx</span></span><br><span class="line">    <span class="attr">storage:</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">kubernetes</span></span><br><span class="line">      <span class="attr">config:</span></span><br><span class="line">        <span class="attr">inCluster:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">web:</span></span><br><span class="line">      <span class="attr">https:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span><span class="string">:5556</span></span><br><span class="line">      <span class="attr">tlsCert:</span> <span class="string">/etc/dex/tls/tls.crt</span></span><br><span class="line">      <span class="attr">tlsKey:</span> <span class="string">/etc/dex/tls/tls.key</span></span><br><span class="line">    <span class="attr">connectors:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">ldap</span></span><br><span class="line">      <span class="attr">id:</span> <span class="string">ldap</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">OpenLDAP</span></span><br><span class="line">      <span class="attr">config:</span></span><br><span class="line">        <span class="attr">host:</span> <span class="string">ldap-server-svc:389</span></span><br><span class="line">        <span class="attr">insecureNoSSL:</span> <span class="literal">true</span></span><br><span class="line">        <span class="attr">insecureSkipVerify:</span> <span class="literal">true</span></span><br><span class="line">        <span class="attr">bindDN:</span> <span class="string">cn=admin,dc=xgit,dc=cn</span></span><br><span class="line">        <span class="attr">bindPW:</span> <span class="string">"123456"</span></span><br><span class="line">        <span class="attr">usernamePrompt:</span> <span class="string">Email</span> <span class="string">Address</span></span><br><span class="line">        <span class="attr">userSearch:</span></span><br><span class="line">          <span class="attr">baseDN:</span> <span class="string">ou=People,dc=xgit,dc=cn</span></span><br><span class="line">          <span class="attr">filter:</span> <span class="string">"(objectClass=person)"</span></span><br><span class="line">          <span class="attr">username:</span> <span class="string">mail</span></span><br><span class="line">          <span class="attr">idAttr:</span> <span class="string">DN</span></span><br><span class="line">          <span class="attr">emailAttr:</span> <span class="string">mail</span></span><br><span class="line">          <span class="attr">nameAttr:</span> <span class="string">cn</span></span><br><span class="line">        <span class="attr">groupSearch:</span></span><br><span class="line">          <span class="attr">baseDN:</span> <span class="string">ou=Groups,dc=xgit,dc=cn</span></span><br><span class="line">          <span class="attr">filter:</span> <span class="string">"(objectClass=groupOfNames)"</span></span><br><span class="line">          <span class="attr">userMatchers:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">userAttr:</span> <span class="string">DN</span></span><br><span class="line">            <span class="attr">groupAttr:</span> <span class="string">member</span></span><br><span class="line">          <span class="attr">nameAttr:</span> <span class="string">cn</span></span><br><span class="line">    <span class="attr">oauth2:</span></span><br><span class="line">      <span class="attr">skipApprovalScreen:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">staticClients:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">id:</span> <span class="string">login</span></span><br><span class="line">      <span class="attr">redirectURIs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">'http://xxxx/callback/my-cluster'</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">'Login App'</span></span><br><span class="line">      <span class="attr">secret:</span> <span class="string">xxxxx</span></span><br><span class="line">    <span class="attr">enablePasswordDB:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">staticPasswords:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">email:</span> <span class="string">"admin@example.com"</span></span><br><span class="line">      <span class="comment"># bcrypt hash of the string "password": $(echo password | htpasswd -BinC 10 admin | cut -d: -f2)</span></span><br><span class="line">      <span class="attr">hash:</span> <span class="string">"xxxx"</span></span><br><span class="line">      <span class="attr">username:</span> <span class="string">"admin"</span></span><br><span class="line">      <span class="attr">userID:</span> <span class="string">"08a8684b-db88-4b73-90a9-3cd1661f5466"</span></span><br></pre></td></tr></table></figure>

</li>
</ul>
<h4 id="dex-k8s-authenticator-部署"><a href="#dex-k8s-authenticator-部署" class="headerlink" title="dex-k8s-authenticator 部署"></a><code>dex-k8s-authenticator</code> 部署</h4><ul>
<li><p><code>dex-k8s-authenticator</code> 的部署也很简单，根据官方的 <code>helm chart</code> 包来部署。演示所以采用的是<code>http</code>，再强调一遍，生产建议使用 <code>SSL</code>。下面是配置文件中需要注意的部分：</p>
<ul>
<li>需要指定 <code>k8s</code> 集群的 <code>ca</code>，即 <code>k8s_ca_pem</code>;</li>
<li>由于 <code>dex</code> 使用的是自签证书，因此将 <code>dex</code> 证书 的<code>ca</code> 添加到 <code>RootCA</code>，即 <code>trusted_root_ca</code>； </li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># Source: dex-k8s-authenticator/templates/configmap.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">release-name-dex-k8s-authenticator</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">release-name-dex-k8s-authenticator</span></span><br><span class="line">    <span class="attr">env:</span> <span class="string">dev</span></span><br><span class="line">    <span class="attr">chart:</span> <span class="string">"dex-k8s-authenticator-1.4.0"</span></span><br><span class="line">    <span class="attr">release:</span> <span class="string">"release-name"</span></span><br><span class="line">    <span class="attr">heritage:</span> <span class="string">"Tiller"</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">config.yaml:</span> <span class="string">|-</span></span><br><span class="line">    <span class="attr">listen:</span> <span class="string">http://0.0.0.0:5555</span></span><br><span class="line">    <span class="attr">web_path_prefix:</span> <span class="string">/</span></span><br><span class="line">    <span class="attr">debug:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">clusters:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">client_id:</span> <span class="string">login</span></span><br><span class="line">      <span class="attr">client_secret:</span> <span class="string">4TORGiNV9M54BTk1v7dNuFSaI6hUjfjr</span></span><br><span class="line">      <span class="attr">description:</span> <span class="string">Example</span> <span class="string">Cluster</span> <span class="string">Long</span> <span class="string">Description...</span></span><br><span class="line">      <span class="attr">issuer:</span> <span class="string">https://xxxx:32000</span></span><br><span class="line">      <span class="attr">k8s_ca_pem:</span> <span class="string">|-</span></span><br><span class="line">        <span class="string">-----BEGIN</span> <span class="string">CERTIFICATE-----</span></span><br><span class="line">        <span class="string">-----END</span> <span class="string">CERTIFICATE-----</span></span><br><span class="line">      <span class="attr">k8s_master_uri:</span> <span class="string">https://xxxx:6443</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">my-cluster</span></span><br><span class="line">      <span class="attr">redirect_uri:</span> <span class="string">http://xxxx:32002/callback/my-cluster</span></span><br><span class="line">      <span class="attr">short_description:</span> <span class="string">My</span> <span class="string">Cluster</span></span><br><span class="line">    <span class="attr">trusted_root_ca:</span> <span class="string">|-</span></span><br><span class="line">      <span class="string">-----BEGIN</span> <span class="string">CERTIFICATE-----</span></span><br><span class="line">      <span class="string">-----END</span> <span class="string">CERTIFICATE-----</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>部署完成：</p>
<p><img src="4.jpg" alt=""></p>
</li>
<li><p>验证 <code>dex</code>：</p>
<p><img src="5.jpg" alt=""></p>
</li>
</ul>
<h3 id="设置-APIServer"><a href="#设置-APIServer" class="headerlink" title="设置 APIServer"></a>设置 <code>APIServer</code></h3><ul>
<li><p>开启 <code>kube-apiserver</code> 的 <code>ODIC</code> 选项，将 <code>dex</code> 的 <code>ca</code> 移动到集群证书的目录：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">--oidc-issuer-url=https://xxxx:32000</span></span><br><span class="line"><span class="string">--oidc-client-id=loginapp</span></span><br><span class="line"><span class="string">--oidc-ca-file=/etc/kubernetes/ssl/dex-ca.pem</span></span><br><span class="line"><span class="string">--oidc-username-claim=email</span></span><br><span class="line"><span class="string">--oidc-groups-claim=groups</span></span><br></pre></td></tr></table></figure>

</li>
</ul>
<h3 id="创建相应的-RBAC-权限"><a href="#创建相应的-RBAC-权限" class="headerlink" title="创建相应的 RBAC 权限"></a>创建相应的 <code>RBAC</code> 权限</h3><ul>
<li><p>我们在 <code>argocd</code> 这个 <code>ns</code> 为 <code>developers</code> 创建 <code>role</code> 和 <code>rolebinding</code>，这个 <code>developers</code> 对应 <code>LDAP</code> 里面的<code>Group</code>：·</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">kind:</span> <span class="string">Role</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ldap-test</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">argocd</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span> <span class="string">[""]</span></span><br><span class="line">  <span class="attr">resources:</span> <span class="string">["pods"]</span></span><br><span class="line">  <span class="attr">verbs:</span> <span class="string">["get",</span> <span class="string">"watch"</span><span class="string">,</span> <span class="string">"list"</span><span class="string">]</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">RoleBinding</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ldap-test</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">argocd</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">Group</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">developers</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">""</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">Role</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ldap-test</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">""</span></span><br></pre></td></tr></table></figure>

<p><img src="6.jpg" alt=""></p>
</li>
</ul>
<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><ul>
<li><p>使用很简单，我们打开 <code>web-app</code> 并用 <code>LDAP</code> 账号去登录，通过之后按照界面的提示去配置 <code>kuebctl</code> 的配置文件：</p>
<p><img src="7.jpg" alt=""><br><img src="8.jpg" alt=""></p>
</li>
<li><p>之后我们使用配置文件进行验证，如下面，权限已经生效，同时<code>token</code> 在一定时间会过期：</p>
<p><img src="9.jpg" alt=""></p>
</li>
<li><p>后续考虑将 <code>arog-cd</code> 与 <code>dex</code> 集成。</p>
</li>
</ul>
]]></content>
      <categories>
        <category>工作</category>
        <category>云原生</category>
      </categories>
      <tags>
        <tag>k8s</tag>
        <tag>LDAP</tag>
        <tag>权限</tag>
      </tags>
  </entry>
</search>
